import re
import numpy as np
import pandas as pd

class ManipulacaoCSV():
        def __init__(self,DataSet):
            self.DataSet = DataSet
            self.mapeamentoUnidade = {
                'FD': 1,
                'UN': 2,
                'CX': 3,
                'CT': 5,
                'TR': 6,
                'PT': 7,
                'BD': 8,
                'DP': 9,
                'PK': 10,
                'KT': 11,
                'PR': 12,
                'SC': 13,
                'CJ': 14,
                'LT': 15,
                'KG': 16,
                'BJ': 17,
                'DZ': 18,
                'PC': 19
            }
            
            self.colunasVerificacao = [
                'codprod',
                'descricaoproduto',
                'embalagem',
                'unidade',
                'codepto',
                'deptodescricao',
                'codsec',
                'secdescricao',
                'codncmex',
                'nbm',
                'informacoestecnicas',
                'codmarca',
                'marca',
                'codmarcatabelamarcas',
                'marcatabelamarcas',
            ]

            self.mapeamentoNomesColunas = {
                'codprod': 'CodigoProduto',
                'descricaoproduto': 'DescricaoProduto',
                'embalagem': 'TipoEmbalagem',
                'unidade': 'Unidade',
                'codmarca': 'CodMarca',
                'marca': 'Marca',
                'codepto': 'CodDepartamento',
                'deptodescricao':'DescricaoDepartamento',
                'codsec': 'CodSecao',
                'secdescricao': 'DescricaoSecao',
                'informacoestecnicas': 'InformacoesTecnicasV1',
            }
            
        def tratamentoCSV(self):
            try:
                    listaModificacoes = []
                    self.modificacoesGeral()
                    self.alteracoesMarca(listaModificacoes)
                    self.alteracoesSecao(listaModificacoes)
                    self.alteracoesTipoEmbalagem(listaModificacoes)
                    self.alteracoesDescricaoProdutoV1(listaModificacoes)
                    self.atribuirValorCampoLista(listaModificacoes)
                    self.alteracoesDescricaoProdutoV2()
                    self.limpezaProdutos()
                    return True,'',self.DataSet
            except Exception as error:
                return False,'Ocorreu um erro no tratamento de dados, Erro: ' + error,[]
            
        def validarDadosCSV(self):
            try:
                ColunasFaltantes = [col for col in self.colunasVerificacao if col not in self.DataSet.columns]
                if len(ColunasFaltantes) > 0:
                    string = ', '.join(ColunasFaltantes)
                    return False,'Não foram encontrados as colunas necessárias, colunas: ' + string
                return True,''
            except Exception as error:
                return False,error
            
        def modificacoesGeral(self):
            self.DataSet.rename(columns=self.mapeamentoNomesColunas, inplace=True)
            
            self.DataSet['CodUnidade'] = self.DataSet['Unidade'].map(self.mapeamentoUnidade)            
            self.DataSet['CodMarca'].replace([np.inf, -np.inf], 9999, inplace=True)
            self.DataSet['CodMarca'].fillna(0, inplace=True)
            self.DataSet['CodMarca'] = self.DataSet['CodMarca'].astype(int)
            self.DataSet['Marca'] = self.DataSet['Marca'].str.strip().str.upper()
            self.DataSet['marcatabelamarcas'] = self.DataSet['marcatabelamarcas'].str.strip().str.upper()
            
            condicao = (self.DataSet['marcatabelamarcas'].notna()) & \
                       (self.DataSet['marcatabelamarcas'] != '') & \
                       (self.DataSet['Marca'] != '0')  & \
                       (self.DataSet['Marca'] != self.DataSet['marcatabelamarcas'])
            self.DataSet.loc[condicao, 'Marca'] = self.DataSet.loc[condicao, 'marcatabelamarcas']
            self.DataSet = self.DataSet.drop(columns={'nbm','codmarcatabelamarcas','marcatabelamarcas','codauxiliar','codauxiliar','codauxiliar2','codncmex','aceitavendafracao'},errors='ignore')
            
        def alteracoesSecao(self,ListaModificacoes):
            # Modificar descrição da seção
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9813,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9814,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9814,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9815,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9816,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9817,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9818,'NovoValor':'COCO RALADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12356,'NovoValor':'LICOR IMPORTADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9955,'NovoValor':'SUCO INTEGRAL'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9120,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10968,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11725,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11726,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11172,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor': 'MOLHO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7438,'NovoValor': 'MAIONESE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor': 'MOLHO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10671,'NovoValor': 'BISCOITO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10672,'NovoValor': 'BISCOITO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10673,'NovoValor': 'BISCOITO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor': 'MOLHO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11881,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11882,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11890,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6606,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 8288,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 8289,'NovoValor': 'CAFE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 108,'NovoValor': 'CHOCOLATE/COBERTURA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 5048,'NovoValor': 'CHOCOLATE/COBERTURA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3017,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3887,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3889,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3890,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 8411,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 8413,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12325,'NovoValor': 'CHOCOLATE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12284,'NovoValor': 'TEMPERO/CONDIMENTO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 1769,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 1770,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12284,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10796,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10797,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10798,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12261,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12262,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 310,'NovoValor': 'BALA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7342,'NovoValor': 'APERITIVO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 5898,'NovoValor': 'DOCE DE LEITE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 2060,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 2061,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9087,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11799,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10997,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7181,'NovoValor': 'CONSERVA SALGADA/ENLATADOS'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 905,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 909,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 4778,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3114,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10186,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11796,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6889,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11161,'NovoValor': 'ATOMATADO/CATCHUP'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10997,'NovoValor': 'ACUCAR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9340,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 9339,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 8903,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7462,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7220,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 1625,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 3666,'NovoValor': 'CHOCOLATE/COBERTURA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11684,'NovoValor': 'ARROZ'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11685,'NovoValor': 'ARROZ'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11686,'NovoValor': 'ARROZ'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 5005,'NovoValor': 'WHISKY IMPORTADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 10914,'NovoValor': 'MOLHO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12511,'NovoValor': 'MOLHO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12354,'NovoValor': 'MOSTARDA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12662,'NovoValor': 'LIMPADOR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 1547,'NovoValor': 'CACHACA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 11248,'NovoValor': 'DESINFETANTE'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 6562,'NovoValor': 'DESCARTAVEL'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 7692,'NovoValor': 'CREMES/SOBREMESA/LEITE COND'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodigoProduto'] == 12356,'NovoValor':'LICOR IMPORTADO'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':(self.DataSet['CodSecao'] == 612) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bHAMBURG.ISOP.\b',case=False,regex=True)),'NovoValor':'LANCHEIRA ISOPOR'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':(self.DataSet['CodSecao'] == 616) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bBAND.ISOP. RASA\b',case=False,regex=True)),'NovoValor':'MARMITEX/BANDEJA'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':(self.DataSet['CodSecao'] == 4) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bRUM\b',case=False,regex=True)),'NovoValor':'RUM'})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 236,'NovoValor':"CREMES/SOBREMESA/LEITE COND"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 604,'NovoValor':"DESCARTAVEL"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 606,'NovoValor':"DESCARTAVEL"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 608,'NovoValor':"DESCARTAVEL"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 282,'NovoValor':"CREMES/SOBREMESA/LEITE COND"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 84,'NovoValor':"SUCO PRONTO"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 92,'NovoValor':"SUCO PRONTO"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 282,'NovoValor':"CREMES/SOBREMESA/LEITE COND"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 312,'NovoValor':"CREMES/SOBREMESA/LEITE COND"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 706,'NovoValor':"UTENSILIO"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 636,'NovoValor':"SACO CONFEITAR"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 10011,'NovoValor':"WHISKY IMPORTADO"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 42,'NovoValor':"ESPUMANTE"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':self.DataSet['CodSecao'] == 10010,'NovoValor':"GORDURA/OLEO ESPECIAIS"})
            ListaModificacoes.append({'CampoTroca':'DescricaoSecao','Filtro':(self.DataSet['CodSecao'] == 234) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bGELATINA\b',case=False, regex=True)),'NovoValor': "GELATINAS"})
            
            # Modificar código da seção
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':(self.DataSet['CodSecao'] == 616) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bBAND.ISOP. RASA\b',case=False,regex=True)),'NovoValor':612})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':(self.DataSet['CodSecao'] == 612) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bHAMBURG.ISOP.\b',case=False,regex=True)),'NovoValor':614})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':(self.DataSet['CodSecao'] == 4) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bRUM\b',case=False,regex=True)),'NovoValor':12})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12356,'NovoValor':21})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9813,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9814,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9814,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9815,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9816,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9817,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9818,'NovoValor':264})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12356,'NovoValor':21})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9955,'NovoValor':84})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9120,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10968,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11725,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11726,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11172,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7438,'NovoValor':210})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10671,'NovoValor':230})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10672,'NovoValor':230})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10673,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6603,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11881,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11882,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11890,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6606,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 8288,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 8289,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 108,'NovoValor':236})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 5048,'NovoValor':236})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3017,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3887,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3889,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3890,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 8411,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 8413,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12325,'NovoValor':312})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12284,'NovoValor':214})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 1769,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 1770,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12284,'NovoValor':214})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10796,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10797,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10798,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12261,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12262,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 310,'NovoValor':302})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7342,'NovoValor':24})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 5898,'NovoValor':10001})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 2060,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 2061,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9087,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11799,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10997,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7181,'NovoValor':204})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 905,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 909,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 4778,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3114,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10186,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11796,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6889,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11161,'NovoValor':212})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10997,'NovoValor':254})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9340,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 9339,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 8903,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7462,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7220,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 1625,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 3666,'NovoValor':236})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11684,'NovoValor':260})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11685,'NovoValor':260})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11686,'NovoValor':260})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 5005,'NovoValor':4})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 10914,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12511,'NovoValor':206})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12354,'NovoValor':208})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 12662,'NovoValor':512})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 1547,'NovoValor':26})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 11248,'NovoValor':526})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 6562,'NovoValor':602})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodigoProduto'] == 7692,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 236,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 604,'NovoValor':602})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 606,'NovoValor':602})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 608,'NovoValor':602})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 282,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 92,'NovoValor':88})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 84,'NovoValor':88})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 282,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 312,'NovoValor':234})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 706,'NovoValor':704})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 636,'NovoValor':710})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 10011,'NovoValor':4})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 42,'NovoValor':40})
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':self.DataSet['CodSecao'] == 10010,'NovoValor':220})    
            ListaModificacoes.append({'CampoTroca':'CodSecao','Filtro':(self.DataSet['CodSecao'] == 234) & (self.DataSet['DescricaoProduto'].str.contains(fr'\bGELATINA\b',case=False, regex=True)),'NovoValor': 10007})
            self.atribuirValorCampoLista(ListaModificacoes)
        
        def alteracoesTipoEmbalagem(self,ListaModificacoes):
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10118,'NovoValor':'C/3000'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 9415,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4925,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3131,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 8219,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2405,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 887,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 885,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4644,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11270,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11268,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 997,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3326,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 1409,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4361,'NovoValor':'C/2'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11320,'NovoValor':'C/12'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11319,'NovoValor':'C/12'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10117,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 8281,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3735,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3730,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3729,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3728,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3726,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3725,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 1606,'NovoValor':'C/21'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10772,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10771,'NovoValor':'C/10'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10770,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11288,'NovoValor':'C/25'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 8218,'NovoValor':'C/3000'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11927,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11928,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 6946,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 6948,'NovoValor':'C/100'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3325,'NovoValor':'C/180'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 1859,'NovoValor':'C/240'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 998,'NovoValor':'C/240'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 10896,'NovoValor':'C/25'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 11273,'NovoValor':'C/4'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2130,'NovoValor':'C/4'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 7315,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 5574,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 6054,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 6056,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 9360,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4351,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12203,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12204,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12724,'NovoValor':'3'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 9360,'NovoValor':'C/500'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12254,'NovoValor':'15X12GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12255,'NovoValor':'15X12GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12031,'NovoValor':'24X18GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12854,'NovoValor':'24X18GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12606,'NovoValor':'10X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12607,'NovoValor':'10X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 6017,'NovoValor':'100X15G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12035,'NovoValor':'100X14G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 5484,'NovoValor':'C/250'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12724,'NovoValor':'3X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 314,'NovoValor':'12X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 315,'NovoValor':'12X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 1430,'NovoValor':'24X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2110,'NovoValor':'24X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2112,'NovoValor':'24X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3918,'NovoValor':'24X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 3921,'NovoValor':'24X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2111,'NovoValor':'12X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2113,'NovoValor':'12X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4019,'NovoValor':'8X1'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 4351,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12031,'NovoValor':'24X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12854,'NovoValor':'24X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12606,'NovoValor':'10X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12607,'NovoValor':'10X18G'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12254,'NovoValor':'15X12GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12255,'NovoValor':'15X12GR'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 5484,'NovoValor':'C/250'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12203,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 12204,'NovoValor':'C/50'})
            ListaModificacoes.append({'CampoTroca':'TipoEmbalagem','Filtro':self.DataSet['CodigoProduto'] == 2668,'NovoValor':'C/1'})

            self.DataSet['TipoEmbalagem'].replace('1,005KG', '1KG', inplace=True)
            self.DataSet['TipoEmbalagem'].replace('1,002KG', '1KG', inplace=True)
            self.DataSet['TipoEmbalagem'].replace('1,008KG', '1KG', inplace=True)
            self.DataSet['TipoEmbalagem'].replace('1,001KG', '1KG', inplace=True)
            self.DataSet['TipoEmbalagem'] = self.DataSet['TipoEmbalagem'].str.replace(r'(\d+)\s+KG', r'\1KG', regex=True)
            self.DataSet['TipoEmbalagem'] = self.DataSet['TipoEmbalagem'].str.replace(r'(\d+)\s+ML', r'\1ML', regex=True)
            self.DataSet['TipoEmbalagem'] = self.DataSet['TipoEmbalagem'].str.replace(r'(\d+)\s+L', r'\1L', regex=True)
            self.DataSet['DescricaoProduto'] = self.DataSet.apply(lambda row: self.removerTipoEmbalagemDescricao(row['DescricaoProduto'], row['TipoEmbalagem']), axis=1)  
            
            self.DataSet['DescricaoProduto'] = self.DataSet['DescricaoProduto'].str.replace(r'\s+', ' ', regex=True)
            self.DataSet['DescricaoProduto'] = self.DataSet['DescricaoProduto'].str.lstrip()

            self.DataSet['QtdeEmbalagem'] = 0
            self.DataSet['PesoEmbalagemUnitaria'] = 0
            self.DataSet['QtdeEmbalagem'] = self.DataSet['QtdeEmbalagem'].astype(int)
            self.DataSet['PesoEmbalagemUnitaria'] = self.DataSet['PesoEmbalagemUnitaria'].astype(float)
            self.DataSet['TipoEmbalagem'] = self.DataSet['TipoEmbalagem'].str.strip()

            ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':(self.DataSet['CodUnidade'].isin([2,8,12,13])),'NovoValor':1})
            
            pattern = r'^\d+X'
            ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':(self.DataSet['QtdeEmbalagem'] == 0) & self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':self.DataSet.loc[(self.DataSet['QtdeEmbalagem'] == 0) & self.DataSet['TipoEmbalagem'].str.contains(pattern), 'TipoEmbalagem'].str.split('X').str[0].fillna(0).astype(int)})
            
            self.DataSet['QtdeEmbalagem'].replace(np.nan, 0, inplace=True)
            self.DataSet['QtdeEmbalagem'] = self.DataSet['QtdeEmbalagem'].astype(int)

            pattern = r'C/(\d+)'
            ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':(self.DataSet['QtdeEmbalagem'] == 0) & self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':self.DataSet.loc[(self.DataSet['QtdeEmbalagem'] == 0) & self.DataSet['TipoEmbalagem'].str.contains(pattern), 'TipoEmbalagem'].str.extract(pattern)[0].fillna(0).astype(int)})

            self.DataSet['QtdeEmbalagem'].replace(np.nan, 0, inplace=True)
            self.DataSet['QtdeEmbalagem'] = self.DataSet['QtdeEmbalagem'].astype(int)
            
            pattern = r'\d+X\d+UN'
            ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem'].str.split('X').str[0].astype(int) *  # valor antes do "X"
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem'].str.split('X').str[1].str.replace('UN', '').astype(int)  # valor depois do "X" sem o "UN"
            )})
            
            pattern = r'\d+X\d+$'
            ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem'].str.split('X').str[0].astype(int) *  # valor antes do "X"
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem'].str.split('X').str[1].astype(int)  # valor depois do "X" sem o "UN"
            )})
        
            patterns = [
                r'^\d+(?:,\d+)?KG$',  
                r'^\d+(?:,\d+)?ML$',  
                r'^\d+(?:,\d+)?LT$', 
                r'^\d+(?:,\d+)?L$',   
                r'^\d+(?:,\d+)?G$'  
            ]

            for pattern in patterns:
                ListaModificacoes.append({'CampoTroca':'QtdeEmbalagem','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True)) & (self.DataSet['CodUnidade'] != 2),'NovoValor':1})
            
            pattern = r'^\d+KG'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split('KG').str[0].fillna(0).astype(float)})
            
            pattern = r'^\d+G'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':(self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split('G').str[0].fillna(0).astype(float) / 1000)})

            pattern = r'^\d+ML'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':(self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split('ML').str[0].fillna(0).astype(float) / 1000)})

            pattern = r'^\d+L'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split('L').str[0].fillna(0).astype(float)})

            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['CodDepartamento'] == 7,'NovoValor':0.1})

            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':((self.DataSet['CodDepartamento'] == 6) & (self.DataSet['CodSecao'] == 646)),'NovoValor':1})

            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':((self.DataSet['CodDepartamento'] == 6) & (self.DataSet['PesoEmbalagemUnitaria'] == 0.0)),'NovoValor':1})

            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':((self.DataSet['CodDepartamento'] == 4) & (self.DataSet['PesoEmbalagemUnitaria'] == 0.0)),'NovoValor':1})

            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':((self.DataSet['CodSecao'] == 520) & (self.DataSet['PesoEmbalagemUnitaria'] == 0.0)),'NovoValor':1})

            pattern = r'(\d+)[xX](\d+)(ML)'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':(self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split(r'[^\d]+').str[1].fillna(0).astype(float) / 1000)})

            pattern = r'(\d+)[xX](\d+)(L)'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':(self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split(r'[^\d]+').str[1].fillna(0).astype(float))})

            pattern = r'(\d+)[xX](\d+)(KG)'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split(r'[^\d]+').str[1].fillna(0).astype(float)})

            pattern = r'(\d+)[xX](\d+)(G)'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['TipoEmbalagem'].str.contains(pattern)),'NovoValor':self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern)), 'TipoEmbalagem'].str.split(r'[^\d]+').str[1].fillna(0).astype(float) / 1000})


            pattern = r'^\d+(?:[,.]\d+)?L'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem'].str.split('L').str[0].fillna(0).str.replace(',', '.', regex=False).astype(float)
            )})
            
            pattern = r'^\d+(?:[,.]\d+)?KG'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                    self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True)), 'TipoEmbalagem'].str.split('KG').str[0].fillna(0).str.replace(',', '.', regex=False).astype(float)
                )
            })
            
            pattern = r'^\d+(?:[,.]\d+)?G'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True)), 'TipoEmbalagem'].str.split('G').str[0].fillna(0).str.replace(',', '.', regex=False).astype(float) / 1000
            )})

            pattern = r'^\d+(?:[,.]\d+)?ML'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[(self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True)), 'TipoEmbalagem'].str.split('ML').str[0].fillna(0).str.replace(',', '.', regex=False).astype(float) / 1000
            )})
            
            pattern = r'^\d+X\d+[,.]?\d*G$'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem']
                .str.extract(r'X(\d+[,.]?\d*)G')[0]  
                .str.replace(',', '.', regex=False)  
                .astype(float) 
            )  / 1000})
            
            pattern = r'^\d+X\d+[,.]?\d*KG$'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem']
                .str.extract(r'X(\d+[,.]?\d*)KG')[0]  
                .str.replace(',', '.', regex=False)  
                .astype(float)  
            )})
                       
            
            pattern = r'^\d+X\d+[,.]?\d*L$'
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':self.DataSet['TipoEmbalagem'].str.contains(pattern),'NovoValor':(
                self.DataSet.loc[self.DataSet['TipoEmbalagem'].str.contains(pattern, regex=True), 'TipoEmbalagem']
                .str.extract(r'X(\d+[,.]?\d*)L')[0]  
                .str.replace(',', '.', regex=False)
                .astype(float)  
            )})           
            
            self.DataSet['PesoEmbalagemUnitaria'].replace(np.nan, 0, inplace=True)
            self.DataSet['PesoEmbalagemUnitaria'] = self.DataSet['PesoEmbalagemUnitaria'].astype(float)
         
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['CodSecao'].isin([308,306,532,534])),'NovoValor':1})
            ListaModificacoes.append({'CampoTroca':'PesoEmbalagemUnitaria','Filtro':(self.DataSet['CodDepartamento'].isin([7])),'NovoValor':1})
            
            self.atribuirValorCampoLista(ListaModificacoes)
            
        def alteracoesMarca(self,ListaModificacoes):
            # Produtos que não tem marcas registradas
            # PREDILECTA
            self.mudarMarcaSemRegistro(self.DataSet,'PREDILECTA','PREDILECTA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PREDILECTA',336,'DescricaoProduto')
            #BONARE
            self.mudarMarcaSemRegistro(self.DataSet,'BONARE','BONARE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BONARE',52,'DescricaoProduto')
            # LAMAR
            self.mudarMarcaSemRegistro(self.DataSet,'LAMAR','LAMARE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LAMAR',230,'DescricaoProduto')
            # LAMARE
            self.mudarMarcaSemRegistro(self.DataSet,'LAMARE','LAMARE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LAMARE',230,'DescricaoProduto')
            # LOWCUCAR
            self.mudarMarcaSemRegistro(self.DataSet,'LOWCUCAR','LOWCUCAR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LOWCUCAR',246,'DescricaoProduto')
            # NUTRIMENTAL
            self.mudarMarcaSemRegistro(self.DataSet,'NUTRIMENTAL','NUTRIMENTAL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NUTRIMENTAL',307,'DescricaoProduto')
            # PIRACANJUBA
            self.mudarMarcaSemRegistro(self.DataSet,'PIRACANJUBA','PIRACANJUBA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PIRACANJUBA',328,'DescricaoProduto')
            # JACK DANIELS
            self.mudarMarcaSemRegistro(self.DataSet,'JACK DANIELS','JACK DANIELS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'JACK DANIELS',206,'DescricaoProduto')
            # CHA LEAO
            self.mudarMarcaSemRegistro(self.DataSet,'CHA LEAO','CHA LEAO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CHA LEAO',236,'DescricaoProduto')
            # CAMPO LARGO
            self.mudarMarcaSemRegistro(self.DataSet,'CAMPO LARGO','CAMPO LARGO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CAMPO LARGO',75,'DescricaoProduto')
            # NUTRY
            self.mudarMarcaSemRegistro(self.DataSet,'NUTRY','NUTRY','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NUTRY',308,'DescricaoProduto')
            # FREEGELLS
            self.mudarMarcaSemRegistro(self.DataSet,'FREEGELLS','FREEGELLS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'FREEGELLS',170,'DescricaoProduto')
            # FREEGELLS
            self.mudarMarcaSemRegistro(self.DataSet,'FREEG','FREEGELLS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'FREEG',170,'DescricaoProduto')
            # FREEGELLS
            self.mudarMarcaSemRegistro(self.DataSet,'FREEGELS','FREEGELLS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'FREEGELS',170,'DescricaoProduto')
            # LIZA
            self.mudarMarcaSemRegistro(self.DataSet,'LIZA','LIZA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LIZA',630,'DescricaoProduto')
            # MITSUWA
            self.mudarMarcaSemRegistro(self.DataSet,'MITSUWA','MITSUWA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MITSUWA',271,'DescricaoProduto')
            # DAJUDA
            self.mudarMarcaSemRegistro(self.DataSet,'DAJUDA','DAJUDA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DAJUDA',122,'DescricaoProduto')
            # N.F
            self.mudarMarcaSemRegistro(self.DataSet,'N.F','NADIR FIGUEIREDO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'N.F',282,'DescricaoProduto')
            # J.WALKER
            self.mudarMarcaSemRegistro(self.DataSet,'J.WALKER','JOHNNIE WALKER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'J.WALKER',210,'DescricaoProduto')
            self.mudarMarcaSemRegistro(self.DataSet,'J.W','JOHNNIE WALKER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'J.W',210,'DescricaoProduto')
            # POMAROLA
            self.mudarMarcaSemRegistro(self.DataSet,'POMAROLA','POMAROLA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'POMAROLA',332,'DescricaoProduto')
            #  ELEFANTE
            self.mudarMarcaSemRegistro(self.DataSet,'ELEFANTE','ELEFANTE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ELEFANTE',150,'DescricaoProduto')
            #  MONIN
            self.mudarMarcaSemRegistro(self.DataSet,'MONIN','MONIN','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MONIN',623,'DescricaoProduto')
            #  BIC
            self.mudarMarcaSemRegistro(self.DataSet,'BIC','BIC','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BIC',37,'DescricaoProduto')
            #  SOYA
            self.mudarMarcaSemRegistro(self.DataSet,'SOYA','SOYA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SOYA',404,'DescricaoProduto')
            #  MELKEN
            self.mudarMarcaSemRegistro(self.DataSet,'MELKEN','MELKEN','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MELKEN',265,'DescricaoProduto')
            #  PRODASA
            self.mudarMarcaSemRegistro(self.DataSet,'PRODASA','PRODASA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PRODASA',341,'DescricaoProduto')
            #  CITROCAL
            self.mudarMarcaSemRegistro(self.DataSet,'CITROCAL','CITROCAL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CITROCAL',618,'DescricaoProduto')
            #  COAMO
            self.mudarMarcaSemRegistro(self.DataSet,'COAMO','COAMO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'COAMO',100,'DescricaoProduto')
            #  NESTLE
            self.mudarMarcaSemRegistro(self.DataSet,'NESTLE','NESTLE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NESTLE',290,'DescricaoProduto')
            #  D. BENTA
            self.mudarMarcaSemRegistro(self.DataSet,'D.BENTA','D.BENTA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'D.BENTA',141,'DescricaoProduto')
            #  MAVALERIO
            self.mudarMarcaSemRegistro(self.DataSet,'MAVAL','MAVAL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MAVAL',262,'DescricaoProduto')
            #  YOKI
            self.mudarMarcaSemRegistro(self.DataSet,'YOKI','YOKI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'YOKI',468,'DescricaoProduto')
            #  SINHA
            self.mudarMarcaSemRegistro(self.DataSet,'SINHA','SINHA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SINHA',393,'DescricaoProduto')
            #  SANGUE DE BOI
            self.mudarMarcaSemRegistro(self.DataSet,'SANGUE DE BOI','SANGUE DE BOI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SANGUE DE BOI',375,'DescricaoProduto')
            self.mudarMarcaSemRegistro(self.DataSet,'SANGUE BOI','SANGUE BOI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SANGUE BOI',375,'DescricaoProduto')
            #  KNORR
            self.mudarMarcaSemRegistro(self.DataSet,'KNORR','KNORR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'KNORR',225,'DescricaoProduto')
            #  GINA
            self.mudarMarcaSemRegistro(self.DataSet,'GINA','GINA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'GINA',176,'DescricaoProduto')
            #  TIROL
            self.mudarMarcaSemRegistro(self.DataSet,'TIROL','TIROL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TIROL',438,'DescricaoProduto')
            #  QBOA
            self.mudarMarcaSemRegistro(self.DataSet,'QBOA','QBOA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'QBOA',347,'DescricaoProduto')
            #  V.FERTIL
            self.mudarMarcaSemRegistro(self.DataSet,'V.FERTIL','V.FERTIL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'V.FERTIL',453,'DescricaoProduto')
            #  TAMPICO
            self.mudarMarcaSemRegistro(self.DataSet,'TAMPICO','TAMPICO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TAMPICO',424,'DescricaoProduto')
            #  MAIS COCO
            self.mudarMarcaSemRegistro(self.DataSet,'MAIS COCO','MAIS COCO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MAIS COCO',251,'DescricaoProduto')
            #  NINHO
            self.mudarMarcaSemRegistro(self.DataSet,'NINHO','NINHO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NINHO',296,'DescricaoProduto')
            #  LECO
            self.mudarMarcaSemRegistro(self.DataSet,'LECO','LECO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LECO',238,'DescricaoProduto')
            #  KITANO
            self.mudarMarcaSemRegistro(self.DataSet,'KITANO','KITANO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'KITANO',224,'DescricaoProduto')
            #  MELLO
            self.mudarMarcaSemRegistro(self.DataSet,'MELLO','MELLO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MELLO',266,'DescricaoProduto')
            #  SUPER BONDER
            self.mudarMarcaSemRegistro(self.DataSet,'SUPER BONDER','SUPER BONDER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SUPER BONDER',414,'DescricaoProduto')
            #  PILAO
            self.mudarMarcaSemRegistro(self.DataSet,'PILAO','PILAO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PILAO',325,'DescricaoProduto')
            #  BRASPRATICK
            self.mudarMarcaSemRegistro(self.DataSet,'BRASPRATICK','BRASPRATICK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BRASPRATICK',59,'DescricaoProduto')
            #  BOM SABOR
            self.mudarMarcaSemRegistro(self.DataSet,'B.SABOR','B.SABOR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'B.SABOR',50,'DescricaoProduto')
            #  BRILHOLAC
            self.mudarMarcaSemRegistro(self.DataSet,'BRILHOLAC','BRILHOLAC','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BRILHOLAC',61,'DescricaoProduto')
            #  BARION
            self.mudarMarcaSemRegistro(self.DataSet,'BARION','BARION','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BARION',32,'DescricaoProduto')
            #  MARIA
            self.mudarMarcaSemRegistro(self.DataSet,'MARIA','MARIA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MARIA',629,'DescricaoProduto')
            #  TERRA VIVA
            self.mudarMarcaSemRegistro(self.DataSet,'TERRA VIVA','TERRA VIVA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TERRA VIVA',429,'DescricaoProduto')
            #  ROSA
            self.mudarMarcaSemRegistro(self.DataSet,'ROSA','ROSA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ROSA',366,'DescricaoProduto')
            #  THEREZOPOLIS
            self.mudarMarcaSemRegistro(self.DataSet,'THEREZOPOLIS','THEREZOPOLIS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'THEREZOPOLIS',433,'DescricaoProduto')
            # SERIGY
            self.mudarMarcaSemRegistro(self.DataSet,'SERIGY','SERIGY','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SERIGY',387,'DescricaoProduto')
            # MUCHO GUSTO
            self.mudarMarcaSemRegistro(self.DataSet,'MUCHO GUSTO','MUCHO GUSTO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MUCHO GUSTO',551,'DescricaoProduto')
            # ITAMBE
            self.mudarMarcaSemRegistro(self.DataSet,'ITAMBE','ITAMBE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ITAMBE',507,'DescricaoProduto')
            # TERRA NOVA
            self.mudarMarcaSemRegistro(self.DataSet,'TERRA NOVA','TERRA NOVA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TERRA NOVA',430,'DescricaoProduto')
            #TERRANOVA
            self.mudarMarcaSemRegistro(self.DataSet,'TERRANOVA','TERRA NOVA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TERRANOVA',430,'DescricaoProduto')
            # FACE A FACE
            self.mudarMarcaSemRegistro(self.DataSet,'FACE A FACE','FACE A FACE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'FACE A FACE',160,'DescricaoProduto')
            # ANDREIA
            self.mudarMarcaSemRegistro(self.DataSet,'ANDREIA','ANDREIA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ANDREIA',695,'DescricaoProduto')
            # ITALAC
            self.mudarMarcaSemRegistro(self.DataSet,'ITALAC','ITALAC','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ITALAC',203,'DescricaoProduto')
            # LIV
            self.mudarMarcaSemRegistro(self.DataSet,'LIV','LIV','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LIV',692,'DescricaoProduto')
            # PRINGLES
            self.mudarMarcaSemRegistro(self.DataSet,'PRINGLES','PRINGLES','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PRINGLES',693,'DescricaoProduto')
            # UNIAO
            self.mudarMarcaSemRegistro(self.DataSet,'UNIAO','UNIAO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'UNIAO',450,'DescricaoProduto')
            # HULALA
            self.mudarMarcaSemRegistro(self.DataSet,'HULALA','HU LA LA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'HU LA LA',694,'DescricaoProduto')
            # SOL
            self.mudarMarcaSemRegistro(self.DataSet,'SOL','SOL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SOL',401,'DescricaoProduto')
            # TARANTELLA
            self.mudarMarcaSemRegistro(self.DataSet,'TARANTELLA','TARANTELLA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TARANTELLA',643,'DescricaoProduto')
            # CHEMIM
            self.mudarMarcaSemRegistro(self.DataSet,'CHEMIM','CHEMIM','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CHEMIM',534,'DescricaoProduto')
            # CALDO BOM OURO
            self.mudarMarcaSemRegistro(self.DataSet,'CALDO BOM OURO','CALDO BOM OURO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CALDO BOM OURO',696,'DescricaoProduto')
            # GREENDAY
            self.mudarMarcaSemRegistro(self.DataSet,'GREENDAY','GREENDAY','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'GREENDAY',697,'DescricaoProduto')
            # PL.LIBREPLAST
            self.mudarMarcaSemRegistro(self.DataSet,'PL.LIBREPLAST','PL.LIBREPLAST','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PL.LIBREPLAST',698,'DescricaoProduto')
            # STIVAL
            self.mudarMarcaSemRegistro(self.DataSet,'STIVAL','STIVAL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'STIVAL',699,'DescricaoProduto')
            # F.FRUIT
            self.mudarMarcaSemRegistro(self.DataSet,'F.FRUIT','F.FRUIT','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'F.FRUIT',700,'DescricaoProduto')
            # PL.PLASZOM
            self.mudarMarcaSemRegistro(self.DataSet,'PL.PLASZOM','PL.PLASZOM','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PL.PLASZOM',701,'DescricaoProduto')
            # VICK
            self.mudarMarcaSemRegistro(self.DataSet,'VICK','VICK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'VICK',702,'DescricaoProduto')
            # DEL LESTE
            self.mudarMarcaSemRegistro(self.DataSet,'DEL LESTE','DEL LESTE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DEL LESTE',703,'DescricaoProduto')
            # LUSAFILM
            self.mudarMarcaSemRegistro(self.DataSet,'LUSAFILM','LUSAFILM','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LUSAFILM',704,'DescricaoProduto')
            # AMANHECER
            self.mudarMarcaSemRegistro(self.DataSet,'AMANHECER','AMANHECER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'AMANHECER',10,'DescricaoProduto')
            # MAVALERIO
            self.mudarMarcaSemRegistro(self.DataSet,'MAVALERIO','MAVALERIO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MAVALERIO',262,'DescricaoProduto')
            # RIO CERRO
            self.mudarMarcaSemRegistro(self.DataSet,'RIO CERRO','RIO CERRO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'RIO CERRO',574,'DescricaoProduto')
            # CIROC
            self.mudarMarcaSemRegistro(self.DataSet,'CIROC','CIROC','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CIROC',97,'DescricaoProduto')
            # TERM.DART
            self.mudarMarcaSemRegistro(self.DataSet,'TERM.DART','TERM.DART','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TERM.DART',584,'DescricaoProduto')
            # JUSSAR
            self.mudarMarcaSemRegistro(self.DataSet,'JUSSARA','JUSSARA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'JUSSARA',705,'DescricaoProduto')
            # J.CUERVO
            self.mudarMarcaSemRegistro(self.DataSet,'J.CUERVO','J. CUERVO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'J.CUERVO',205,'DescricaoProduto')
            # SONY
            self.mudarMarcaSemRegistro(self.DataSet,'SONY','SONY','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SONY',706,'DescricaoProduto')
            # AGROLIVA
            self.mudarMarcaSemRegistro(self.DataSet,'AGROLIVA','AGROLIVA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'AGROLIVA',707,'DescricaoProduto')
            # TRAKINAS
            self.mudarMarcaSemRegistro(self.DataSet,'TRAKINAS','TRAKINAS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TRAKINAS',647,'DescricaoProduto')
            # RIO BELO
            self.mudarMarcaSemRegistro(self.DataSet,'RIO BELO','RIO BELO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'RIO BELO',533,'DescricaoProduto')
            # NETTO
            self.mudarMarcaSemRegistro(self.DataSet,'NETTO','NETTO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NETTO',291,'DescricaoProduto')
            # GUARAVITON
            self.mudarMarcaSemRegistro(self.DataSet,'GUARAVITA','GUARAVITON','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'GUARAVITA',189,'DescricaoProduto')
            # MOCOCA
            self.mudarMarcaSemRegistro(self.DataSet,'MOCOCA','MOCOCA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MOCOCA',708,'DescricaoProduto')
            # MANACA
            self.mudarMarcaSemRegistro(self.DataSet,'MANACA','MANACA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MANACA',709,'DescricaoProduto')
            # MOCA
            self.mudarMarcaSemRegistro(self.DataSet,'MOCA','MOCA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MOCA',274,'DescricaoProduto')
            # PERFETTO
            self.mudarMarcaSemRegistro(self.DataSet,'PERFETTO','PERFETTO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PERFETTO',710,'DescricaoProduto')
            # SCHRAMM
            self.mudarMarcaSemRegistro(self.DataSet,'SCHRAMM','SCHRAMM','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SCHRAMM',711,'DescricaoProduto')
            # LIPLAST
            self.mudarMarcaSemRegistro(self.DataSet,'LIPLAST','LIPLAST','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LIPLAST',595,'DescricaoProduto')
            # AMAZOO
            self.mudarMarcaSemRegistro(self.DataSet,'AMAZOO','AMAZOO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'AMAZOO',522,'DescricaoProduto')
            # ZACAPA
            self.mudarMarcaSemRegistro(self.DataSet,'ZACAPA','ZACAPA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ZACAPA',471,'DescricaoProduto')
            # 1891 CHOCOLATE
            self.mudarMarcaSemRegistro(self.DataSet,'CHOC.1891','NEUGEBAUER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CHOC.1891',292,'DescricaoProduto')
            # IRACEMA
            self.mudarMarcaSemRegistro(self.DataSet,'IRACEMA','IRACEMA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'IRACEMA',712,'DescricaoProduto')
            # MOMIJI
            self.mudarMarcaSemRegistro(self.DataSet,'MOMIJI','MOMIJI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MOMIJI',689,'DescricaoProduto')
            # HUNTS
            self.mudarMarcaSemRegistro(self.DataSet,'HUNTS','HUNTS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'HUNTS',713,'DescricaoProduto')
            # CAMIL
            self.mudarMarcaSemRegistro(self.DataSet,'CAMIL','CAMIL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CAMIL',714,'DescricaoProduto')
            # NAMASTEA
            self.mudarMarcaSemRegistro(self.DataSet,'NAMASTEA','NAMASTEA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NAMASTEA',715,'DescricaoProduto')
            # STRAW
            self.mudarMarcaSemRegistro(self.DataSet,'STRAW','STRAWPLAST','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'STRAW',408,'DescricaoProduto')
            # DREHER
            self.mudarMarcaSemRegistro(self.DataSet,'DREHER','DREHER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DREHER',716,'DescricaoProduto')
            # CINZANO
            self.mudarMarcaSemRegistro(self.DataSet,'CINZANO','CINZANO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CINZANO',96,'DescricaoProduto')
            # AUREA
            self.mudarMarcaSemRegistro(self.DataSet,'AUREA','AUREA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'AUREA',25,'DescricaoProduto')
            # FAST COCO
            self.mudarMarcaSemRegistro(self.DataSet,'FAST COCO','FAST COCO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'FAST COCO',717,'DescricaoProduto')
            # ZANDONA
            self.mudarMarcaSemRegistro(self.DataSet,'ZANDONA','ZANDONA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ZANDONA',718,'DescricaoProduto')
            # GRADINA
            self.mudarMarcaSemRegistro(self.DataSet,'GRADINA','GRADINA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'GRADINA',183,'DescricaoProduto')
            # MRPLUS
            self.mudarMarcaSemRegistro(self.DataSet,'MRPLUS','MRPLUS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MRPLUS',719,'DescricaoProduto')
            # NUTRIACO
            self.mudarMarcaSemRegistro(self.DataSet,'NUTRIACO','NUTRIACO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'NUTRIACO',306,'DescricaoProduto')
            # BIPACK
            self.mudarMarcaSemRegistro(self.DataSet,'BIP','BIPACK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BIP',40,'DescricaoProduto')
            self.mudarMarcaSemRegistro(self.DataSet,'BP','BIPACK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BP',40,'DescricaoProduto')
            self.mudarMarcaSemRegistro(self.DataSet,'BIP','BIPACK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BIP',40,'DescricaoProduto')
            self.mudarMarcaSemRegistro(self.DataSet,' BIP771','BIPACK','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,' BIP771',40,'DescricaoProduto')
            # LOGAN HERITAGE
            self.mudarMarcaSemRegistro(self.DataSet,'LOGAN HERITAGE','LOGAN','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LOGAN HERITAGE',244,'DescricaoProduto')
            # MARLEYS MELLOOW MOOD
            self.mudarMarcaSemRegistro(self.DataSet,'MARLEYS MELLOOW MOOD','MARLEYS MELLOOW MOOD','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MARLEYS MELLOOW MOOD',720,'DescricaoProduto')
            # F.LUX
            self.mudarMarcaSemRegistro(self.DataSet,'F.LUX','F.LUX','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'F.LUX',161,'DescricaoProduto')
            # LINTEA
            self.mudarMarcaSemRegistro(self.DataSet,'LINTEA','LINTEA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LINTEA',721,'DescricaoProduto')
            # VILENA
            self.mudarMarcaSemRegistro(self.DataSet,'VILENA','VILENA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'VILENA',722,'DescricaoProduto')
            # GUARA
            self.mudarMarcaSemRegistro(self.DataSet,'GUARA','GUARA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'GUARA',187,'DescricaoProduto')
            # ARCOLOR
            self.mudarMarcaSemRegistro(self.DataSet,'ARCOLOR','ARCOLOR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ARCOLOR',21,'DescricaoProduto')
            # PRIMOR
            self.mudarMarcaSemRegistro(self.DataSet,'PRIMOR','PRIMOR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PRIMOR',339,'DescricaoProduto')
            # MEDEIROS
            self.mudarMarcaSemRegistro(self.DataSet,'MEDEIROS','MEDEIROS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MEDEIROS',723,'DescricaoProduto')
            # PLASCOL
            self.mudarMarcaSemRegistro(self.DataSet,'PLASCOL','PLASCOL','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PLASCOL',724,'DescricaoProduto')
            # STOLICHNAYA
            self.mudarMarcaSemRegistro(self.DataSet,'IMP.STOLI','STOLICHNAYA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'IMP.STOLI',606,'DescricaoProduto')
            # CATARINAO
            self.mudarMarcaSemRegistro(self.DataSet,'CATARINAO','CATARINAO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CATARINAO',725,'DescricaoProduto')
            # CARTE DOR
            self.mudarMarcaSemRegistro(self.DataSet,'CARTE DOR','CARTE DOR','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CARTE DOR',81,'DescricaoProduto')
            # TUPI
            self.mudarMarcaSemRegistro(self.DataSet,'TUPI','TUPI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TUPI',726,'DescricaoProduto')
            # F.SANTANA
            self.mudarMarcaSemRegistro(self.DataSet,'F.SANTANA','F.SANTANA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'F.SANTANA',727,'DescricaoProduto')
            # TEMPOS BAG
            self.mudarMarcaSemRegistro(self.DataSet,'TEMPOS BAG','TEMPOS BAG','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TEMPOS BAG',728,'DescricaoProduto')
            # BORGES
            self.mudarMarcaSemRegistro(self.DataSet,'BORGES','BORGES','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'BORGES',631,'DescricaoProduto')
            # COLLINA
            self.mudarMarcaSemRegistro(self.DataSet,'COLLINA','COLLINA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'COLLINA',729,'DescricaoProduto')
            # CEPERA
            self.mudarMarcaSemRegistro(self.DataSet,'CEPERA','CEPERA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CEPERA',89,'DescricaoProduto')
            # TRAVESSIA
            self.mudarMarcaSemRegistro(self.DataSet,'TRAVESSIA','TRAVESSIA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TRAVESSIA',730,'DescricaoProduto')
            # ADES
            self.mudarMarcaSemRegistro(self.DataSet,'ADES','ADES','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ADES',731,'DescricaoProduto')
            # MONSTER
            self.mudarMarcaSemRegistro(self.DataSet,'MONSTER','MONSTER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MONSTER',732,'DescricaoProduto')
            # TRAMONTINA
            self.mudarMarcaSemRegistro(self.DataSet,'TRAM','TRAMONTINA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TRAM',733,'DescricaoProduto')
            # CAIPIROSKA
            self.mudarMarcaSemRegistro(self.DataSet,'CAIPIROSKA','CAIPIROSKA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CAIPIROSKA',734,'DescricaoProduto')
            # J&B
            self.mudarMarcaSemRegistro(self.DataSet,'J&B','J&B','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'J&B',734,'DescricaoProduto')
            # PELE
            self.mudarMarcaSemRegistro(self.DataSet,'PELE','PELE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PELE',319,'DescricaoProduto')
            # MOSER
            self.mudarMarcaSemRegistro(self.DataSet,'MOSER','MOSER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MOSER',278,'DescricaoProduto')
            # TOQUE DE CHEF
            self.mudarMarcaSemRegistro(self.DataSet,'TOQUE DE CHEF','KITANO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TOQUE DE CHEF',224,'DescricaoProduto')
            # ROCHA
            self.mudarMarcaSemRegistro(self.DataSet,'ROCHA','ROCHA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'ROCHA',362,'DescricaoProduto')
            # CRIOULO
            self.mudarMarcaSemRegistro(self.DataSet,'CRIOULO','CRIOULO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CRIOULO',115,'DescricaoProduto')
            # PORTO MESSIAS
            self.mudarMarcaSemRegistro(self.DataSet,'PORTO MESSIAS ','PORTO MESSIAS ','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PORTO MESSIAS ',735,'DescricaoProduto')
            # COPOBRAS
            self.mudarMarcaSemRegistro(self.DataSet,'COPOBRAS','COPOBRAS','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'COPOBRAS',110,'DescricaoProduto')
            # DON JULIO
            self.mudarMarcaSemRegistro(self.DataSet,'DON JULIO','DON JULIO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DON JULIO',140,'DescricaoProduto')
            # TOP
            self.mudarMarcaSemRegistro(self.DataSet,'TOP','TOP','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TOP',441,'DescricaoProduto')
            # EXTRA POWER
            self.mudarMarcaSemRegistro(self.DataSet,'EXTRA POWER','EXTRA POWER','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'EXTRA POWER',521,'DescricaoProduto')
            # DART
            self.mudarMarcaSemRegistro(self.DataSet,'DART','DART','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DART',584,'DescricaoProduto')
            #  STELLA DORO
            self.mudarMarcaSemRegistro(self.DataSet,'STELLA DORO','STELLA DORO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'STELLA DORO',513,'DescricaoProduto')
            # JUREMA
            self.mudarMarcaSemRegistro(self.DataSet,'JUREMA','JUREMA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'JUREMA',736,'DescricaoProduto')
            # CHOCO BALL POWER MICRO COLORIDO MAVALERIO
            self.mudarMarcaSemRegistro(self.DataSet,'CHOCO BALL POWER MICRO COLORIDO','MAVALERIO','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'CHOCO BALL POWER MICRO COLORIDO',262,'DescricaoProduto')
            # LACTOPLASA
            self.mudarMarcaSemRegistro(self.DataSet,'LACTOPLASA','LACTOPLASA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'LACTOPLASA',737,'DescricaoProduto')
            # JUN DAITI
            self.mudarMarcaSemRegistro(self.DataSet,'DAITI','DAITI','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DAITI',213,'DescricaoProduto')
            # SAL REFIN.CRISTALINO 10X1KG LEBRE
            self.mudarMarcaSemRegistro(self.DataSet,'SAL REFIN.CRISTALINO 10X1KG','LEBRE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'SAL REFIN.CRISTALINO 10X1KG',237,'DescricaoProduto')
            # MALAGUENA
            self.mudarMarcaSemRegistro(self.DataSet,'MALAGUENA','MALAGUENA','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'MALAGUENA',738,'DescricaoProduto')
            # DO VALE
            self.mudarMarcaSemRegistro(self.DataSet,'DO VALE','DO VALE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'DO VALE',135,'DescricaoProduto')
            # OLIV CONDE
            self.mudarMarcaSemRegistro(self.DataSet,'OLIV CONDE','OLIV CONDE','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'OLIV CONDE',739,'DescricaoProduto')
            # TING
            self.mudarMarcaSemRegistro(self.DataSet,'TING','TING','DescricaoProduto')
            self.mudarCodMarcaSemRegistro(self.DataSet,'TING',740,'DescricaoProduto')
            # PE VERMELHO
            self.mudarMarcaSemRegistro(self.DataSet,'PE VERMELHO','PE VERMELHO','Marca')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PE VERMELHO',603,'Marca')
            # HULALA
            self.mudarMarcaSemRegistro(self.DataSet,'HU LA LA','HU LA LA','Marca')
            self.mudarCodMarcaSemRegistro(self.DataSet,'HU LA LA',694,'Marca')
            # PROVINCIA
            self.mudarMarcaSemRegistro(self.DataSet,'PROVINCIA','PROVINCIA','Marca')
            self.mudarCodMarcaSemRegistro(self.DataSet,'PROVINCIA',741,'Marca')
            # IMBIARA
            self.mudarMarcaSemRegistro(self.DataSet,'IMBIARA','IMBIARA','Marca')
            self.mudarCodMarcaSemRegistro(self.DataSet,'IMBIARA',742,'Marca')

            # Produtos que já tem marcas registradas
            self.mudarMarcaJaRegistrada(self.DataSet,'PIRABEIRAB','PIRABEIRABA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'PIRABEIRAB',590,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'CAMIL','CAMIL','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'CAMIL',714,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'JANDIRA','JANDIRA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'JANDIRA',208,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'PIRABEIRABA','PIRABEIRABA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'PIRABEIRABA',590,'DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'CIRIO',633,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'CIRIO','CIRIO','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'LOGAN HERITAGE',244,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'LOGAN HERITAGE','LOGAN HERITAGE','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'DOCEIRO',137,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'DOCEIRO','DOCEIRO','DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'SMIRNOFF','SMIRNOFF','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'SMIRNOFF',396,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'TOMADORO','TOMADORO','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'TOMADORO',440,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'FACA/FESTA','FACA A FESTA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'FACA/FESTA',667,'DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'BONARE',52,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'BONARE','BONARE','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'URBANO',452,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'URBANO','URBANO','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'FRITEI',611,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'FRITEI','FRITEI','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'ATACAMA',24,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'ATACAMA','ATACAMA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'FACE/FACE',160,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'CIRIO','CIRIO','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'SANTA RITA',571,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'SANTA RITA','SANTA RITA','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'BOCCONE',520,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'BOCCONE','BOCCONE','DescricaoProduto')
            self.mudarCodMarcaJaRegistrada(self.DataSet,'FRANSCESCHINI',483,'DescricaoProduto')
            self.mudarMarcaJaRegistrada(self.DataSet,'FRANSCESCHINI','FRANSCESCHINI','DescricaoProduto')


            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 5929,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 6237,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 2785,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 5663,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 6238,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 785,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 5664,'NovoValor':262})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 7355,'NovoValor':68})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodigoProduto'] == 12773,'NovoValor':68})
            ListaModificacoes.append({'CampoTroca':'CodMarca','Filtro':self.DataSet['CodMarca'] == 0,'NovoValor':743})

            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 5929,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 6237,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 2785,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 5663,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 6238,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 785,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 5664,'NovoValor': 'MAVALERIO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 7355,'NovoValor': 'BUZZI'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodigoProduto'] == 12773,'NovoValor': 'BUZZI'})

            #Adicionar variação de nome da marca, para futuramente remover da descrição do produto
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 5,'NovoValor': self.DataSet['Marca'] + ',ALDEIA SERRA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 7,'NovoValor': self.DataSet['Marca'] + ',ALMADEM'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 18,'NovoValor': self.DataSet['Marca'] + ',ARAMITO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 35,'NovoValor': self.DataSet['Marca'] + ',BELLA COLINA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 38,'NovoValor': self.DataSet['Marca'] + ',BELLA COLINA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 40,'NovoValor': self.DataSet['Marca'] + ',BIP'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 40,'NovoValor': self.DataSet['Marca'] + ',BP'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 43,'NovoValor': self.DataSet['Marca'] + ',BLACK&WHITE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 50,'NovoValor': self.DataSet['Marca'] + ',BOM SABOR'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 50,'NovoValor': self.DataSet['Marca'] + ',DEGUST'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 62,'NovoValor': self.DataSet['Marca'] + ',BUBBALOO'})
            
            
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 75,'NovoValor': self.DataSet['Marca'] + ',CAMPO LARGO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 75,'NovoValor': self.DataSet['Marca'] + ',C.LARGO'})
            
            
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 83,'NovoValor': self.DataSet['Marca'] + ',CASA PORT.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 86,'NovoValor': self.DataSet['Marca'] + ',CASILLERO D'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 86,'NovoValor': self.DataSet['Marca'] + ',CASILLERO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 93,'NovoValor': self.DataSet['Marca'] + ',CHOCO BALL POWER'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 106,'NovoValor': self.DataSet['Marca'] + ',.CD.FOUCAULD'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 112,'NovoValor': self.DataSet['Marca'] + ',COUNTRY WINE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 120,'NovoValor': self.DataSet['Marca'] + ',DABARRA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 156,'NovoValor': self.DataSet['Marca'] + ',ESSENSE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 161,'NovoValor': self.DataSet['Marca'] + ',FIAT LUX'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 162,'NovoValor': self.DataSet['Marca'] + ',FIBRAF.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 162,'NovoValor': self.DataSet['Marca'] + ',.FIBRAF.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 170,'NovoValor': self.DataSet['Marca'] + ',FREEG.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 170,'NovoValor': self.DataSet['Marca'] + ',FREEGELS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 177,'NovoValor': self.DataSet['Marca'] + ',G SOL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 177,'NovoValor': self.DataSet['Marca'] + ',GIR.SOL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 189,'NovoValor': self.DataSet['Marca'] + ',GUARAVITA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 195,'NovoValor': self.DataSet['Marca'] + ',HENING'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 197,'NovoValor': self.DataSet['Marca'] + ',HELLMANS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 199,'NovoValor': self.DataSet['Marca'] + ',HINAT'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 205,'NovoValor': self.DataSet['Marca'] + ',J.CUERVO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 206,'NovoValor': self.DataSet['Marca'] + ",JACK DANIEL'S"})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 210,'NovoValor': self.DataSet['Marca'] + ',J.W.,J.WALKER'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 210,'NovoValor': self.DataSet['Marca'] + ',J.W.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 210,'NovoValor': self.DataSet['Marca'] + ',J.WALKER'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 213,'NovoValor': self.DataSet['Marca'] + ',DAITI'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 230,'NovoValor': self.DataSet['Marca'] + ',LAMAR'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 230,'NovoValor': self.DataSet['Marca'] + ',LAM'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 234,'NovoValor': self.DataSet['Marca'] + ',LATITUD 33'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 236,'NovoValor': self.DataSet['Marca'] + ',CHA MATTE LEAO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 251,'NovoValor': self.DataSet['Marca'] + ',.M.COCO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 252,'NovoValor': self.DataSet['Marca'] + ',MAIZENA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 254,'NovoValor': self.DataSet['Marca'] + ',M JAMES'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 256,'NovoValor': self.DataSet['Marca'] + ',.ROTA DO SOL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 279,'NovoValor': self.DataSet['Marca'] + ',MRPLUS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 280,'NovoValor': self.DataSet['Marca'] + ',MU-MU'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 282,'NovoValor': self.DataSet['Marca'] + ',N.F.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.BIBS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.STIKADINHO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.AMOR CARIOCA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.1891'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.NAPOLITANO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',.MUMUKIDS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 292,'NovoValor': self.DataSet['Marca'] + ',A.CARIOCA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 305,'NovoValor': self.DataSet['Marca'] + ',NUTRIVITA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 316,'NovoValor': self.DataSet['Marca'] + ',.OVOMALTINE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 340,'NovoValor': self.DataSet['Marca'] + ',PROPOLP'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 347,'NovoValor': self.DataSet['Marca'] + ',Q.BOA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 350,'NovoValor': self.DataSet['Marca'] + ',QUIMIDRO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 357,'NovoValor': self.DataSet['Marca'] + ',CONCHA RES'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 366,'NovoValor': self.DataSet['Marca'] + ',ROS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 369,'NovoValor': self.DataSet['Marca'] + ',S.GERMAIN'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 369,'NovoValor': self.DataSet['Marca'] + ',ST.GERMAIN'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 370,'NovoValor': self.DataSet['Marca'] + ',SAINTPAUL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 370,'NovoValor': self.DataSet['Marca'] + ',SANT PAUL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 373,'NovoValor': self.DataSet['Marca'] + ',S.MARTIN'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 378,'NovoValor': self.DataSet['Marca'] + ',S HELENA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 379,'NovoValor': self.DataSet['Marca'] + ',S.J.BARRA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 392,'NovoValor': self.DataSet['Marca'] + ',HOENCK'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 408,'NovoValor': self.DataSet['Marca'] + ',.STRAW.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 408,'NovoValor': self.DataSet['Marca'] + ',STRAW.'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 418,'NovoValor': self.DataSet['Marca'] + ',.SWEET'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 418,'NovoValor': self.DataSet['Marca'] + ',SWEET FLOCO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 432,'NovoValor': self.DataSet['Marca'] + ',SINGLETON'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 453,'NovoValor': self.DataSet['Marca'] + ',VALE FERTIL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 453,'NovoValor': self.DataSet['Marca'] + ',V.FERTIL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 453,'NovoValor': self.DataSet['Marca'] + ',V FERTIL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 454,'NovoValor': self.DataSet['Marca'] + ',VB'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 454,'NovoValor': self.DataSet['Marca'] + ',V. BARREIRO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 454,'NovoValor': self.DataSet['Marca'] + ',V.BARREIRO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 476,'NovoValor': self.DataSet['Marca'] + ',IGUACU'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 477,'NovoValor': self.DataSet['Marca'] + ',SCOTCH-BRITE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 483,'NovoValor': self.DataSet['Marca'] + ',FRANCESCHINI'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 489,'NovoValor': self.DataSet['Marca'] + ',HEMMER'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 501,'NovoValor': self.DataSet['Marca'] + ',COOPERFOODS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 512,'NovoValor': self.DataSet['Marca'] + ',FORT HEALT'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 517,'NovoValor': self.DataSet['Marca'] + ',BRAZIL UP'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 519,'NovoValor': self.DataSet['Marca'] + ',BLUM'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 524,'NovoValor': self.DataSet['Marca'] + ',GEORGES AUBERT'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 528,'NovoValor': self.DataSet['Marca'] + ',OLD CESA 88'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 535,'NovoValor': self.DataSet['Marca'] + ',EAZY BOOSE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 538,'NovoValor': self.DataSet['Marca'] + ',NO INSET'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 541,'NovoValor': self.DataSet['Marca'] + ',LOUREIRO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 547,'NovoValor': self.DataSet['Marca'] + ',MATUTO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 551,'NovoValor': self.DataSet['Marca'] + ',M.GUSTO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 551,'NovoValor': self.DataSet['Marca'] + ',MUCHO GOSTO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 557,'NovoValor': self.DataSet['Marca'] + ',GAL'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 585,'NovoValor': self.DataSet['Marca'] + ',LOS CARDOS'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 590,'NovoValor': self.DataSet['Marca'] + ',PIRABEIRAB'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 603,'NovoValor': self.DataSet['Marca'] + ',PE VERMELHO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 606,'NovoValor': self.DataSet['Marca'] + ',.STOLI'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 611,'NovoValor': self.DataSet['Marca'] + ',KROCK'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 624,'NovoValor': self.DataSet['Marca'] + ',D.RAVELLO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 627,'NovoValor': self.DataSet['Marca'] + ',S.JOAO'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 630,'NovoValor': self.DataSet['Marca'] + ',LIZA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 635,'NovoValor': self.DataSet['Marca'] + ',COCO SUPER'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 639,'NovoValor': self.DataSet['Marca'] + ',SINA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 653,'NovoValor': self.DataSet['Marca'] + ',LEV & UZE'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 667,'NovoValor': self.DataSet['Marca'] + ',FACA/FESTA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 673,'NovoValor': self.DataSet['Marca'] + ',DINDA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 694,'NovoValor': self.DataSet['Marca'] + ',HULALA'})
            ListaModificacoes.append({'CampoTroca':'Marca','Filtro':self.DataSet['CodMarca'] == 733,'NovoValor': self.DataSet['Marca'] + ',TRAM.'})    
            self.atribuirValorCampoLista(ListaModificacoes)
            self.DataSet['DescricaoProduto'] = self.DataSet.apply(
                lambda row: self.removerMarcasDescricao(str(row['DescricaoProduto']) if pd.notnull(row['DescricaoProduto']) else '', row['Marca']),
                axis=1
            )

        def alteracoesDescricaoProdutoV2(self):
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'ESTOJO')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'CAIXA')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'VINHO IMP ')
            self.removerPalavrasSecaoDescricao(self.DataSet,14,'TEQUILA ')
            self.removerPalavrasSecaoDescricao(self.DataSet,14,'TEQUILERO ')
            self.removerPalavrasSecaoDescricao(self.DataSet,14,'DEL LESTE ')
            self.removerPalavrasSecaoDescricao(self.DataSet,32,'COQUETEL ')
            self.removerPalavrasSecaoDescricao(self.DataSet,55,'COQUETEL ')
            self.removerPalavrasSecaoDescricao(self.DataSet,55,'BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,55,'GFAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,54,' GFAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,646,'UTEN.')
            self.removerPalavrasSecaoDescricao(self.DataSet,642,'EMBAL.')
            self.removerPalavrasSecaoDescricao(self.DataSet,642,'.PALITEIRO')
            self.removerPalavrasSecaoDescricao(self.DataSet,638,'UTEN.TOUCA')
            self.removerPalavrasSecaoDescricao(self.DataSet,638,'TOUCA')
            self.removerPalavrasSecaoDescricao(self.DataSet,638,'UTEN.')
            self.removerPalavrasSecaoDescricao(self.DataSet,718,'FORZA')
            self.removerPalavrasSecaoDescricao(self.DataSet,532,'PARA TUDO ')
            self.removerPalavrasSecaoDescricao(self.DataSet,32,'PET ')
            self.removerPalavrasSecaoDescricao(self.DataSet,520,'UN ORIG.')
            self.removerPalavrasSecaoDescricao(self.DataSet,520,'UN PROMO')
            self.removerPalavrasSecaoDescricao(self.DataSet,520,'PERTUTO')
            self.removerPalavrasSecaoDescricao(self.DataSet,520,'SERV.PESADO')
            self.removerPalavrasSecaoDescricao(self.DataSet,520,'USO GERAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,256,'DIET')
            self.removerPalavrasSecaoDescricao(self.DataSet,256,'PLUS')
            self.removerPalavrasSecaoDescricao(self.DataSet,650,'STYLUS')
            self.removerPalavrasSecaoDescricao(self.DataSet,502,'CLAREX')
            self.removerPalavrasSecaoDescricao(self.DataSet,502,'PERF. 12X1')
            self.removerPalavrasSecaoDescricao(self.DataSet,502,'PERF. 6X2')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'STARKA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'  PETACA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,10,'CIDADE  VD 902ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,26,'PURA')
            self.removerPalavrasSecaoDescricao(self.DataSet,26,'TRADICIONAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,21,'  (IRL)')
            self.removerPalavrasSecaoDescricao(self.DataSet,21,'ORIGINAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'51')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'LN')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'REFRESCA')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,2,'PROMO')
            self.removerPalavrasSecaoDescricao(self.DataSet,10001,'POTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,10001,'BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10001,'DA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10001,'POTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,272,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,272,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,272,'PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,272,'BOMCOCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,258,'(ARARUTINHA)')
            self.removerPalavrasSecaoDescricao(self.DataSet,258,' (CORUJA)')
            self.removerPalavrasSecaoDescricao(self.DataSet,97,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,97,'GF')
            self.removerPalavrasSecaoDescricao(self.DataSet,97,'EDICAO LTDA')
            self.removerPalavrasSecaoDescricao(self.DataSet,97,'BLEND')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,' INTERFOLHADO CAI CAI')
            self.removerPalavrasSecaoDescricao(self.DataSet,514,'PRO ')
            self.removerPalavrasSecaoDescricao(self.DataSet,514,'CARE')
            self.removerPalavrasSecaoDescricao(self.DataSet,514,'  CAPIM')
            self.removerPalavrasSecaoDescricao(self.DataSet,526,'BAK ')
            self.removerPalavrasSecaoDescricao(self.DataSet,526,'CITRUS')
            self.removerPalavrasSecaoDescricao(self.DataSet,526,'TRADICAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,526,'BAK ')
            self.removerPalavrasSecaoDescricao(self.DataSet,642,' MENTA')
            self.removerPalavrasSecaoDescricao(self.DataSet,642,'16X250')
            self.removerPalavrasSecaoDescricao(self.DataSet,642,'2X2')
            self.removerPalavrasSecaoDescricao(self.DataSet,278,'MED.FLAME')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'CM')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'CLASSIC')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'UN')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'2000X2')
            self.removerPalavrasSecaoDescricao(self.DataSet,640,'48X100')
            self.removerPalavrasSecaoDescricao(self.DataSet,274,'.CRISTALINO')
            self.removerPalavrasSecaoDescricao(self.DataSet,274,'2000X8G')
            self.removerPalavrasSecaoDescricao(self.DataSet,264,'FLOCOCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,264,' SWEET COCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,264,' SWEET FLOCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' CREAM')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' SP')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' PASTA')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' PROTEIN')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' NUTS')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' CRISPY')
            self.removerPalavrasSecaoDescricao(self.DataSet,314,' +PROTEIN')
            self.removerPalavrasSecaoDescricao(self.DataSet,54,' 4L CX')
            self.removerPalavrasSecaoDescricao(self.DataSet,54,' PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,54,' COQUETEL')
            self.removerPalavrasSecaoDescricao(self.DataSet,54,' BORDO')
            self.removerPalavrasSecaoDescricao(self.DataSet,220,' LATAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,220,' BALDE')
            self.removerPalavrasSecaoDescricao(self.DataSet,220,' VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'200ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'250ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH010 X SALADA')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' - PARA HAMBURGUER')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH01E')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH02')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH02A')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH03')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH04 HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH101')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH102')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH102')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH121')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' CH132')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' FRANGO HFX2')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF01')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF02')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF03')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF04 HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF05 HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF101')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF102')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF106')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF106')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF121')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF136')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH01')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH02')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH03')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH05 HOT DOG ')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH101')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' TH106')
            self.removerPalavrasSecaoDescricao(self.DataSet,614,' HF132')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,' CARINHO')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,' ACONCHEGO')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,' INTENSO')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,' INTEN')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,'2L -')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,'500ML -')
            self.removerPalavrasSecaoDescricao(self.DataSet,504,'/TALCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,262,'UCH ZIP')
            self.removerPalavrasSecaoDescricao(self.DataSet,262,'PO')
            self.removerPalavrasSecaoDescricao(self.DataSet,262,' SACHET')
            self.removerPalavrasSecaoDescricao(self.DataSet,262,' VIDRO')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,' LEVINHO')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'1L C/TAMPA')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'CULINARIO')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'PANIFICACAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'PROFISSIONAL 1K')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'OTIMO')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'1L C/TAMPA')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'1L S/TAMPA')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'1L')
            self.removerPalavrasSecaoDescricao(self.DataSet,232,'C/TAMP')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'(1:10L)')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'COZINHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'ORIGINAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'TRADICIONAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'NATUREZA')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'CLASSICO')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'LV500 PG 450')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'3 EM 1 500M')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'500M')
            self.removerPalavrasSecaoDescricao(self.DataSet,512,'ATIV')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,'DELIVERY')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,'DELI')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,'KAMBE')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,'MIX')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' PROF.15CM')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' PROF.10,5CM')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' PROF.14,5CM')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' PROF.13CM')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' SANFONA 12,5CM (FUNDO)')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,' SANFONA 14,5CM (FUNDO)')
            self.removerPalavrasSecaoDescricao(self.DataSet,628,'PAPEL AMANTEIGADO')
            self.removerPalavrasSecaoDescricao(self.DataSet,1022,'CHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,1022,'(C/ENV.)')
            self.removerPalavrasSecaoDescricao(self.DataSet,1022,'(S/ENV.)')
            self.removerPalavrasSecaoDescricao(self.DataSet,1022,'ERVAS')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'FOOD')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'ITALIANO')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'GOURMET')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'PREMIUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'TIO')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'MEU')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'7GRAOS+')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'LONGO')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'MEDIO CALROSE')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'CURTO')
            self.removerPalavrasSecaoDescricao(self.DataSet,260,'SUSHI')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'CX')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'SH')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'MACIEZ ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'PRIM.')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'800G ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'400G ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'2,2KG ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'1,6KG ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'DIA-A-DIA 1KG ')
            self.removerPalavrasSecaoDescricao(self.DataSet,506,'PRIMAVERA ')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,'EXTRA LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,'CREMOSA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' 12X2KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' 6X2KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,'SUPREME ')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,'COAMO ')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' 500G')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' POUCH')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' PLACA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' 250G')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' 1KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,10009,' EXTRA LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,708,'40573')
            self.removerPalavrasSecaoDescricao(self.DataSet,646,'C/100')
            self.removerPalavrasSecaoDescricao(self.DataSet,646,' LAM')
            self.removerPalavrasSecaoDescricao(self.DataSet,646,' DISPLAY')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,'BISN')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' 180')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' GALAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' 3,6KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' 1,01')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' TOP DOWN')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' PREM')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,' 1,01')
            self.removerPalavrasSecaoDescricao(self.DataSet,208,'.')          	 	 	 	 	
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' 16X4')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' AX16UN')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' VELV')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' C/8')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' C/4')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' PROMO')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' C12')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' C/12')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' FIT')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' C4')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,' PREMIUM ')
            self.removerPalavrasSecaoDescricao(self.DataSet,402,'300M')
            self.removerPalavrasSecaoDescricao(self.DataSet,218,' MEU CALDO')
            self.removerPalavrasSecaoDescricao(self.DataSet,306,'21X8G')
            self.removerPalavrasSecaoDescricao(self.DataSet,306,'GUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,306,'UN')
            self.removerPalavrasSecaoDescricao(self.DataSet,306,'C100')
            self.removerPalavrasSecaoDescricao(self.DataSet,306,'C90')
            self.removerPalavrasSecaoDescricao(self.DataSet,218,'CHEF LINE')  	
            self.removerPalavrasSecaoDescricao(self.DataSet,218,'TABLETE') 
            self.removerPalavrasSecaoDescricao(self.DataSet,218,' PANKO TEMPERADA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,218,' P/FRITURAS') 
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'CAIXINHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'CAXINHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'CAIX')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,' -')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'CREMOSO')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'VERDE')
            self.removerPalavrasSecaoDescricao(self.DataSet,228,'CX') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' 750ML') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' TACA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' 200ML') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' 269ML') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' PETACA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,' 275ML') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,'LT') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,'VD') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,'LATA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,'C/2 TACAS') 
            self.removerPalavrasSecaoDescricao(self.DataSet,16,'C/1') 
            self.removerPalavrasSecaoDescricao(self.DataSet,216,'LATA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,216,'PET') 
            self.removerPalavrasSecaoDescricao(self.DataSet,216,'VD') 
            self.removerPalavrasSecaoDescricao(self.DataSet,48,'ORIGEM') 
            self.removerPalavrasSecaoDescricao(self.DataSet,48,'750ML') 
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'750ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'660M')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'ITALIAN')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'600ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'FESTY')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'D.O.C.G')
            self.removerPalavrasSecaoDescricao(self.DataSet,40,'D.O')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'DIET')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'100G')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'1,65KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'1,8KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'100G')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'2,2KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'F.PACK')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'VIDRO')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'PREMIUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'POTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'SERRA')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'CASCAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'PREM.')	 	       
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'PRATICA')
            self.removerPalavrasSecaoDescricao(self.DataSet,202,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10007,'CAIXINHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,10007,'15X12GR')
            self.removerPalavrasSecaoDescricao(self.DataSet,254,'CRISTALCUCAR')  
            self.removerPalavrasSecaoDescricao(self.DataSet,254,'DOCUCAR')  
            self.removerPalavrasSecaoDescricao(self.DataSet,254,'GROSSO')  
            self.removerPalavrasSecaoDescricao(self.DataSet,254,'/FIT')  
            self.removerPalavrasSecaoDescricao(self.DataSet,254,'80% MENOS CALORIAS')  
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'BAG') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'1,6KG')  
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'BOX')  
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'PROFISSION')  
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'BALDE')  
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'TRAPEZIO') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'D.PACK') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'BISNAGA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'C/BICO') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'DOY PACK') 
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'MARIANA')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'POTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'AIOLI')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'REC.CASEIRA')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'CASEIRA')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'TRAD.')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'VIDRO')
            self.removerPalavrasSecaoDescricao(self.DataSet,210,'PREMIUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,99,'DOCINHA')
            self.removerPalavrasSecaoDescricao(self.DataSet,99,'INTENSA')
            self.removerPalavrasSecaoDescricao(self.DataSet,80,'1L')
            self.removerPalavrasSecaoDescricao(self.DataSet,80,'260ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,80,'2L')
            self.removerPalavrasSecaoDescricao(self.DataSet,80,'FLYNOW')
            self.removerPalavrasSecaoDescricao(self.DataSet,80,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'SUCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,88,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'IMPORTADA')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'NACIONAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'5KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'(P/EMPANAR)')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'KIMILHO')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'MILHO AMARELO')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'MILHO BCO')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'BIJU FLOCADA')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'(HIDRATADA)')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'C/FERMENTO 10X1KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'.VACUO 10X1')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'RESERVA ESP 10X1')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'PREMIATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'AMAR.')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'BCA')
            self.removerPalavrasSecaoDescricao(self.DataSet,268,'(P/EMPANAR)')  
            self.removerPalavrasSecaoDescricao(self.DataSet,4,'IMP')  
            self.removerPalavrasSecaoDescricao(self.DataSet,4,'.')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'CONCENT.PURE')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'PURE CONCENT.')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'CALDA')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'XAROPE PET')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'PURE LE FRUIT ')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'CONCENTRADO')  
            self.removerPalavrasSecaoDescricao(self.DataSet,94,'XAROPE')  
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'POTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'PREMIUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'.BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'GALAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'DOY PACK 1,01KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'GOURM.')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'4,08KG LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'1,7KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'PASSATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'TOP DOWN')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'4,08KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'PIZZA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'REFOG.TRAD SACH')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'REFOG.')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'CLASSICO')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'TRAD.')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'TRAD')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'300G')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'BOLONHESA')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'1,06KG TRAD.TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'HOT DOG')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'TRADICIONAL')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'CLASS. VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'CLASS.')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'RUST. VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,212,'1,06KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'ORIGEM ')  
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'CLASSIC ')  
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'LABURANTES')  
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'RESERVA') 
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'RES') 
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'120')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'750ML')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'DONA PAULA - ')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'ESPECIAL - VINHO FINO')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'VINHO FINO ')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'750MLVINHO DOCE')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'BAG TINTO 5L')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'BAG TINTO 3L')
            self.removerPalavrasSecaoDescricao(self.DataSet,46,'- FRISANTE')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'GALAO')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'1L PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'PET')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'CREMOSO')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'TRAPEZIO')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'1L')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'BECHAMEL')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'PREMIUM')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'TRAD')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'PREMI')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'BOX')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'CAESER 200X10')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'CAESER 200X18')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'FRENCH 200X10')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'ITALIAN120X18')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'ITALIAN200X10')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'FRENCH 200X10')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'3,250KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'3,250KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'3,250KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,206,'3,250KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'09/11')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'100G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'2,550KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,750')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'440')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,8KG VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,08G BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,8KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,2KG BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'7/8')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'150G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'2KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'150G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'200G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'300G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'500G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,01K')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'16/20')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'20/24')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'120G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,01K')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,4KG BALDE')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,01KG BD')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'BD')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,01KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,01KG BD')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'90/110')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1, BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'160G')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'ACAI CX/6')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,4KG BALDE')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'1,08G BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,204,'VDE')
            self.removerPalavrasSecaoDescricao(self.DataSet,602,'MAROMBA')
            self.removerPalavrasSecaoDescricao(self.DataSet,602,'MEGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'1,01')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'1,005')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'1,01KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,5KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'BAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'BISNAGA')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'BD')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'10MM')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'4KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'BISNAG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'TP')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,05')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,1')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,6KG LA')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,54KG LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'45G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'80G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'90G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'40G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'70G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'15,6G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'32G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'12,3G')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,57KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2KG')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'2,4KG LATA')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'VD')
            self.removerPalavrasSecaoDescricao(self.DataSet,234,'200G')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'PTA','PRETA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'PINK LEMONADE -','LEMONADE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'LEMONADE VIDRO','LEMONADE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'FUSILLI','PARAFUSO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'PENA','PENNE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'SPAGUETTI','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'C/OVOS LISA 12X200','C/OVOS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'KIDS PERSONAGENS 24X500','KIDS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'SPAGHETTI 8','SPAGHETTI')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'TRICOLORE PARAFUSO','PARAFUSO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'SPAGUETTI','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE 5','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE 8','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE NÂº 8','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETINHO NÂº 9','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'FURADINHO','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'LINGUINE','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE 5 30X500','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE 30X500','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE 5','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ALETRIA','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'FITILHOS OURO 20X500','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'AVE MARIA','PADRE NOSSO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'M IMPRESSO ALT 35 LARG 24','ALTURA 35CM LARG.24CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'14X34','ALTURA 14CM LARG.34CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'14X40','ALTURA 14CM LARG.40CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'17X40','ALTURA 17CM LARG.40CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'G LISO 20KG ALT 36 LARG 31','ALTURA 35CM LARG.24CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'M LISO 15KG ALT 35 LARG 24','ALTURA 36CM LARG.31CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'MONOL.HAMB. ALTURA 14CM LARG.34CM','MONOL. ALTURA 14CM LARG.34CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'MONOL.HAMB. ALTURA 14CM LARG.34CM','MONOL. ALTURA 14CM LARG.34CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'MONOL.HAMB. ALTURA 14CM LARG.40CM','MONOL. ALTURA 14CM LARG.40CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,628,'MONOL.PIPOCA  17X25 ALTURA 17CM LARG.25CM','MONOL. ALTURA 17CM LARG.25CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'LIMP.','LIMPADOR ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'LIMPADOR LIMPADOR','LIMPADOR')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'ADOR PERF ','ADOR PERFUMADA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'M.USO',' MULTIUSO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'LIMPEZA PERFUMADA ','PERFUMADA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'IMPADOR PESADA ','IMPADOR LIMPEZA PESADA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,512,'TIRA LIMO C/','LIMPADOR ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,232,'DESNAT.','DESNATADO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,232,'SEMI DESNATADO','SEMI') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,232,'SEMI','SEMI DESNATADO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'ORIGINAL','TRADICIONAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'MATINAL','TRADICIONAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'C/LEITE REFIL','TRADICIONAL C/LEITE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'TRADICAO','TRADICIONAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'CAPPUCCINO CLASSIC','SOLUVEL CAPPUCCINO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,262,'GRAOS EXPRESSO','TRADICIONAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'E RECHEIO BD','E RECHEIO CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,' PRO AZUL',' AZUL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,' LV2 PG1,8 AZUL ACONCH',' AZUL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,' LV2 PG1,8 AZUL INTENS',' AZUL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,' LV2 PG1,8 AZULS',' AZUL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,' BLUE',' AZUL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,'VERMELHO','VERME')
            self.substituirPalavrasSecaoDescricao(self.DataSet,504,'VERME','VERMELHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,614,'COMP','COM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,614,'COM','COMP')
            self.substituirPalavrasSecaoDescricao(self.DataSet,614,'.COMP 22,2 LARG 13 ALT 7CM','. COMP 22,2 LARG 13 ALT 7CM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,614,'.A COMP 14,6 LARG 14,6 ALT 9,2CM - CAP.450G','. COMP 14,6 LARG 14,6 ALT 9,2CM - CAP.450G')
            self.substituirPalavrasSecaoDescricao(self.DataSet,614,' CH202 C/DIV.',' 1 DIV.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,54,'SVE','SUAVE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'SUCO DE UVA','SUCO UVA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'TTO','TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'LIM ZERO','LIMAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'CAPIM LIMÃO','LIMAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'MATE+LIM.ORGANICO','LIMAO+MATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'VERD+','VERDE+')
            self.substituirPalavrasSecaoDescricao(self.DataSet,264,'/ADOC.','/ADOC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,264,'FLOCOS UMIDO/AD','FLOCOS UMIDO/ADOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,264,'/ADOC','/ADOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,264,'/ADOC..OC','/ADOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,264,'..','.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,260,'PARB.','PARBOILIZADO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'CHOCO.','CHOC. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,26,'AGUARD.','CACHACA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'FILTR','SIDRA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'TTO','TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,54,'TTO','TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,54,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'TTO','TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'VINHO   DEL','VINHO NAC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'TTO','TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,68,'CHOPP DE VINHO','CERVEJA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'MARGARINA','MARG. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,62,'CACHACA ','AGUARD. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10006,'SALGADINHO .','SALGADINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'ENERGETICO','ENERG. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'ISOTONICO ','ENERG. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,220,'GORD /SUPREMA ','GORD. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,508,'LAVA ROUPA LIQ ','DETERG.LIQ.L ROUPA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1021,'DES ','DESC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,218,'TEMPERO ','CALDO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,252,'VHO ','VINHO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'DRINK PINK ','GIN ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'DRINK GIN ','GIN ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,216,'EXT.V ','EXT V ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,88,'CHA ','SUCO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,214,'TEMPERO','COND. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,642,'ESPETINHO ','ESPETO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,532,'PANO M.USO','PANO MULTIUSO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,626,'SACOLA PLAST. ','SACOLA PL. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,626,'SACO PLAST.','SACOLA PL. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,710,'UTEN.SACO CONF.','UTEN.SACO CONFEITAR ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,304,'BABOOM CHICLE','C/CHICLE ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,718,'ALCALINA STAMINA GRANDE','ALCAL.GRANDE ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'FILTRADO ','ESPUM. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLFORTE ','PLASTICO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLLONGA ','PLASTICO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLMINI ','PLASTICO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLREFEIC.','PLASTICO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLSOBR.','PLASTICO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'BCO ','BRANCA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'.CROCANT10MM ','CROCANTE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'SACHET','SACHE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'GRANULE','GRANUL.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'C SAUV/MERLOT','CABERNET SAUVIGNON E MERLOT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'M SECO','MEIO SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'MEIO SEC','MEIO SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,55,'CAB SAUVIG','CABERNET SAUVIGNON')
            self.substituirPalavrasSecaoDescricao(self.DataSet,234,'FIBRACO','FIBRA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,244,'E. FINA','EXTRA FINA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,256,'SOSTEVIA','STEVIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,256,'C/STEVIA','STEVIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,256,'C/SUCRALOSE','SUCRALOSE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,256,'LIGHT/FIT','LIGHT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,256,'MULTI-ADOCANTE','SUCRALOSE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,276,'PASTA AMERICANA TRADICIONAL','FONDANT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,276,'PASTILHA','DROPS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,14,'REPOS.','REPOSADO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,14,'REP ','REPOSADO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,14,'REPOS. ','REPOSADO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,14,'MEX. ','MEXICANA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,14,'MEX.','MEXICANA ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,650,'BCO','BCA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,650,'TIRA MANCHAS S/CLORO','ALVEJANTE SEM CLORO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,626,'ESPECIAL ','PL. ESPECIAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,626,'GOLD ','PL. GOLD')
            self.substituirPalavrasSecaoDescricao(self.DataSet,21,'ETHIOPIAN COFFE','CAFE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,21,'BARISTO CAFE','CAFE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,22,'CHOC.','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1021,'PINK','ROSA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1021,'COMF','COMFORT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1021,'SEN+1','SENSITIVE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,526,'. ','.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,526,'.','. ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,530,'ACEN.','ACENDEDOR')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'F. VERMELHAS','FRUTAS VERMELHAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'LIGA DA JUSTICA MORANGO','S/A MORANGO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'CELEBRATE','MACA VERDE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,43,'ICE','ICE MACA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,514,'PASTILHA ADESIVA','GEL ADESIVO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,514,'DETERG. ','DETERG ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,514,'DETERG.','DETERG ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,514,'ALCALINO CLORADO','LIQ. ALCALINO CLORADO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'COOKIES E','COOKIES')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'FOND.CHOC','C/CHOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'CHOC.AO LEITE','C/CHOC. AO LEITE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'BOLO DE CHOCOLATE','C/CHOC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'E CHOC.','C/CHOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,'CHOCOLATE/AVELA','AVELA C/CHOC.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,314,' C/BANANA','BANANA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,642,'PALITO HASHI EMB.','PALITO HASHI ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,642,'DENTAL MAD.','DENTAL MAD')
            self.substituirPalavrasSecaoDescricao(self.DataSet,642,'DENTAL MAD','DENTAL MAD.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,642,'MADEIRA 25CMX4MM','MAD.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,640,'N. ','N.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'LICHIA/UVA VERDE','LICHIA, UVA VERDE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'FASES XO TPM','CEREJA, MORANGO, BAUNILHA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM AMORA/MIRTILO/BAUNILHA /10','AMORA, MIRTILO, BAUNILHA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM CAMOMILA/CIDREIRA/MARACUJA','CAMOMILA, CIDREIRA, MARACUJA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM CIDREIRA/LARANJA/LIMAO /10','CIDREIRA, LARANJA, LIMAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM FRUTAS VERMELHAS','FRUTAS VERMELHAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM GENGIBRE E ESPECIARIAS /10','GENGIBRE, ESPECIARIAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM HIBISCO/ROSA SILV./AMORA','HIBISCO, ROSA SILVA, AMORA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM MACA','MACA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM MACA E CANELA','MACA, CANELA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'PREM MORANGO','MORANGO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'ERVA CIDREIRA 10G 0 SACHE','CIDREIRA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,1022,'DOCE 20G 0 SACHE','DOCE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,260,'PAELLA','ESP. RISOTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'MARG ','MARG.')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'(BAIXO TEOR DE SAL','C/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'MASSAS E BOLOS','BOLO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'BOLO','MASSAS E BOLOS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'CREMES','MASSAS E BOLOS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'FOLHADOS','CROISSANTS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'CROISSANTS','CROISSANTS E FOLHADOS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'C/SAL 70% LIP','70% GORD.C/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'S/SAL 70% LIP','70% GORD.S/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'S/SAL 82% LIP','82% GORD.S/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'LIGHT C/SAL 55% LIP','55% GORD.C/SAL LIGHT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'80% LIP.S/SAL','80% GORD.S/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'C/SAL 20% GORD.','20% GORD.C/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'C/SAL 60% GORD.','60% GORD.C/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'C/SAL 82% LIP',' 82% GORD.C/SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,10009,'.  BLISTER','.BLISTER')
            self.substituirPalavrasSecaoDescricao(self.DataSet,708,'TEN.AVENTAL TERGAL','TEN.AVENTAL OXFORD')
            self.substituirPalavrasSecaoDescricao(self.DataSet,708,'CONF.BRIM C/ELAS.','CONFEITEIRO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,646,'G AMARELA','AMARELA G')
            self.substituirPalavrasSecaoDescricao(self.DataSet,646,'P AMARELA','AMARELA P') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,646,'M AMARELA','AMARELA M') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,646,'UVA DESCART.VINI','UVA PLAST.DESCARTAVEL') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'F.TRIPLA','F.TRIP') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'F.SIMPLES','F.SIM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'F.SIMP','F.SIM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'F.SIM','F.SIMPLES') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'PERFU.','PERFUM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'HIG.ROLAO BRANCO 8X300.','HIG.ROLAO BRANCO RECICLADO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'HIG.ROLAO LIGHT BCO 8X300.','HIG.ROLAO BRANCO RECICLADO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'HIG.ROLAO CLASSIC.','HIG.ROLAO CLASSIC PAPEL VIRGEM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,402,'HIG.ROLAO CLASSIC LIGHT 8X300.','HIG.ROLAO CLASSIC PAPEL VIRGEM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,218,'MAIS SABOR ALECRIM','ALECRIM, CEBOLA E ALHO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,306,'T.FRUTTI','TUTTI-FRUTTI') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,306,'X TUTTI FRUTTI','TUTTI-FRUTTI') 	
            self.substituirPalavrasSecaoDescricao(self.DataSet,218,'GRELHADOS TOQUE DE CHEF','CARNE') 	
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'(ING)','ING.') 	
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'(ING','ING.') 	 
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'SILVER C/2S','LONDON DRY') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'SICILIAN LEMOM','LEMONADE') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,'STRAWBERRY (MORANGO)','MORANGO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,' SUNSET (LARANJA)',' LARANJA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,16,' SEVILLA ING.',' LARANJA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'BROWNIE SACHE','CHOCOLATE SACHE') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'LIMAO - CAIXINHA','LIMAO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'CHOCOLATE - CAIXINHA','CHOCOLATE') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'BAUNILHA - CAXINHA','BAUNILHA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'COCO - CAIXINHA','COCO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'FLORESTA NEGRA','CHOCOLATE') 	
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'AIPIM CREMOSO','AIPIM') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'BAUNILHA - CAXINHA','BAUNILHA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'BRIGADEIRO','CHOCOLATE') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,228,'FESTA - CAIXINHA','FESTA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,216,'EXT VIRGEM','EXT V') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,216,'EXT VIRGEM','EXT V') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,216,'EXT VIRGEM','EXT V') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,202,'/',' E ') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,202,'C E TALO','C/TALO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,202,'S E TALO','S/TALO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CAB SAUV','CABERNET SAUVIGNON')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'SVE','SUAVE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'SCO','SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'BRANCO.','BRANCO ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'.BRANCO',' BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'.TINTO',' TINTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'SECO','SEC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'SEC','SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'-',' ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'NATURELLE','CABERNET SAUVIGNON E MERLOT E MARSELAN')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CHARD/ VIOGNIER','CHARDONNAY E VIOGNIER')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CABERNET SAUVIGNONIG','CABERNET SAUVIGNON')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'C. SAUV / MERLOT','CABERNET SAUVIGNON E MERLOT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'MARSELAN / MALBE','MARSELAN E MALBEC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CHARDONN ','CHARDONNAY ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'SAUVIG BLANC ','SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CAB FRANC ','CABERNET FRANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CHARDON / MOSCATO ','CHARDONNAY E MOSCATO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CAB.MERLOT.TANNAT','CABERNET E MERLOT TANNAT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CHARDON.VIOGNIER','CHARDONNAY VIOGNIER')
            self.substituirPalavrasSecaoDescricao(self.DataSet,48,'CABERNET SAUVIGNON.MERLOT','CABERNET SAUVIGNON E MERLOT')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'ESPUM.','ESPUM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'SEM ALCOOL','S/ALCOOL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'DEMI SEC','DEMI-SEC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'MOSCATO','MOSCATEL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'C/2TAC','C/2 TACAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,40,'ROSADO','ROSE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,202,'DOCE DE FRUTA','GELEIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'GLACUCAR IMPALPAVEL','GLACE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'CONFEITEIRO','IMPALPAVEL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'CRISTAL BRANCO','CRISTAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'ADOCANTE','ACUCAR')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'PLUS C/STEVIA','SOSTEVIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'MAVALERIO','IMPALPAVEL')  
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'GLACE REAL','GLACE')  
            self.substituirPalavrasSecaoDescricao(self.DataSet,254,'IMPALPAVEL HARALD','IMPALPAVEL') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'TRADICIONAL','TRADIC') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'TRADIC','TRADICIONAL') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'TROPICAL','TROPIC') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'TROPIC','TROPICAL') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'PESSEGO','PESSE') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'PESSE','PESSEGO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'MELANCIA','MELANC') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'MELANC','MELANCIA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'S/ACUCAR','S/ACUC') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'S/ACUC','S/ACUCAR') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'COCO/ACAI','COCO E ACAI') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'MORANGO/PESSEGO','MORANGO E PESSEGO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'ABACAXI/HORTELA','ABACAXI E HORTELA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'ABACAXI/HORTEL','ABACAXI E HORTELA') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'ABACAXI/HORTE','ABACAXI E HORTELA') 	 	 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'LIMAO','CITRUS') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'LO-CARB','TRADICIONAL LO-CARB') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'PET','TRADICIONAL') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,80,'BIG','TRADICIONAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,99,'TANGERINA','ERINA') 	
            self.substituirPalavrasSecaoDescricao(self.DataSet,99,'ERINA','TANGERINA') 		
            self.substituirPalavrasSecaoDescricao(self.DataSet,99,'MIX PARA CAIPIRINHA PÓ LIMÃO','LIMAO') 
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'SPAGHETTI INTEG.','ESPAGUETE INTEGRAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'SPAGHETTI','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETINHO Nº 9','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'ESPAGUETE Nº 8','ESPAGUETE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'TAGLIATELLE','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'TORTELLINE 20X','GRAVATA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'GRAVATA','CAVATAPPI')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'FETTUCCINE','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'GEMELLI','CAVATAPPI')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'RIGATONI','PENNE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'NINHO 2','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'TALHARIM 20X500','NINHO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'CAVATAPPI20X ','CAVATAPPI')
            self.substituirPalavrasSecaoDescricao(self.DataSet,224,'CARACOLINHO ','CAVATAPPI')
            self.substituirPalavrasSecaoDescricao(self.DataSet,268,'MILHO AMAR.','FUBA MILHO AMARELO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,268,'MIX S/GLUTEN','MANDIOCA E ARROZ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,4,'ANOS','YEARS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'RECH.MORANGO PICA PAU','MORANGO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'MEIO A MEIO CHOC BCO E PTO','CHOCOLATE BRANCO E PRETO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'MEIO A MEIO CHOC E MORANGO','CHOCOLATE E MORANGO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'WAFER MORANGO PICA PAU','WAFER MORANGO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'WAFER CHOCOLATE PICA PAU','WAFER CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'WAFER BAUNILHA PICA PAU','WAFER BAUNILHA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'RECH.CHOCOLATE PICA PAU','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'RECH.BAUNILHA PICA PAU','BAUNILHA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'SALT PLUS ORIGNAL','SALGADO AGUA E SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'SALT PLUS MANTEIGA','SALGADO MANTEIGA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'SALT PLUS INTEGRAL','SALGADO AGUA E SAL INTEGRAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'SALT PLUS GERGELIM','SALGADO GERGELIM')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'HITS SALGADINHO SALSA E CEB.','SALGADO SALSA E CEBOLA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'HITS SALGADINHO QUEIJO','SALGADO QUEIJO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'HITS SALGADINHO PRESUNTO','SALGADO PRESUNTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'HITS SALGADINHO ORIGINAL','SALGADO AGUA E SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'HITS SALGADINHO CHURRASCO','SALGADO CHURRASCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'NESTLE RECH. CHOCOLATE','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'CARINHO COBERTO C/CHOC','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'ORIGINAL(SALGADO)','SALGADO AGUA E SAL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'PIZZA','SALGADO PIZZA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'PRESUNTO','SALGADO PRESUNTO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'SNACK PIZZA MARGUERITA','SALGADO PIZZA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'NESTLE TRADICIONAL','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'COOKIE ALPINO GOTAS CHOC','GOTAS CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'RECH.PRESTIGIO','CHOCOLATE COM COCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'WAFER PRESTIGIO','WAFER CHOCOLATE COM COCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'TRADICIONAL','CHOCOLATE BRANCO E PRETO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'RECH.PRESTIGIO','CHOCOLATE COM COCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'NESTLE RECH. CHOCOL.','CHOCOLATE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'MAISENA','MAIZENA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,'BREAK ORIGINAL','SALGADO QUEIJO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,' SNACK BARBECUE ','SALGADO BARBECUE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,230,' SNACK PARMESAO ','SALGADO PARMESAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,610,'BCO','BRANCO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,610,'PTO','PRETO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,610,'M SHAKE','M.SHAKE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'POP CORN','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'KIPOLENTA','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'PREMIUM','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'POP C.','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'CINEMA','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'COB.CARAMELO POP','COB.CARAMELO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'HUNNER','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'PRETO 1KG','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,240,'MILHO BRANCA','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,302,'500G','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,214,'ALHO EM PO','ALHO PO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,214,'(COLORAU)1,005','(COLORAU)')
            self.substituirPalavrasSecaoDescricao(self.DataSet,214,'CHURRASCO DE IGREJA',' GRILL')
            self.substituirPalavrasSecaoDescricao(self.DataSet,94,'CURACAO TRIPLE SEC','LARANJAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,94,'CURACAO BLUE','LARANJAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,94,'CAPIM LIMAO','LIMAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,94,'GRENADINE','FRAMBOESA, GROSELHA VERMELHA, AMORA SILVESTRES')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'TRAD.SACHE','TRAD.SAC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'TRAD.SAC','TRAD.SACHE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'TOMATE SACHE','TOMATE SACH')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'TOMATE SACH','TOMATE SACHE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'SACHE','SAC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'SACH','SAC')
            self.substituirPalavrasSecaoDescricao(self.DataSet,212,'SAC','SACHE')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'ROSE SECO','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CHARDONNA ',' CHARDONNAY ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CAB SAUVIG ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CABERNET SAUVIN ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES MALBEC ',' MALBEC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' S. BLANC DULCE ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' S. BLANC ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CAB SAUV ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CAB SAUVIG ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CAB.SAUVIGNON ','CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CABERNET SAUV ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' CABERNET SAUVIGNON ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' ELEG C.SAUV ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES CAB SAUVIGNON ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES CAB.MERLOT ',' CABERNET MERLOT ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES CARMENERE ',' CARMENERE ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES CHARDONNAY ',' CHARDONNAY ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES MERLOT ',' MERLOT ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RES SAUV BLANC ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' RESERVA CAB SAUVIG ',' CABERNET SAUVIGNON ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' SAUV.BLANC BRANCO ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' SAUVIGNON BLANC ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' SAUV BLANC ',' SAUVIGNON BLANC ')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,' TRES MEDALLAS','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'M SEC','MEIO SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'SANTA RITA -','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,46,'M. SECO','MEIO SECO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'.','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'ESCURO MADEIRA','MADEIRA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'LEMON','LIMAO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'PARMESAN','PARMESAN QUEIJO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'SRIRACHA','JALAPENO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'ERVAS FINAS 235','ERVAS FIN')
            self.substituirPalavrasSecaoDescricao(self.DataSet,206,'ERVAS FIN','ERVAS FINAS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'PICLES','PEPINO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'FEIJOADA','FEIJAO FEIJOADA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'MIX DE CONSERVAS','MIX DE CONSERVAS PIMENTA, COGUMELO, CEBOLINHA, PEPINOS')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'ACAI CX/6','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'1,08G BAG','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'COBER.PIZZA','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'24/28','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'14/16 PREM.GDE','')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'MED ','MEDIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,204,'MED.','MEDIA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'PLACAI','PLASTICO')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'BCA','BRANCA')
            self.substituirPalavrasSecaoDescricao(self.DataSet,602,'BRANCO','BRANCA')
            
            self.editarDescricaoProduto(self.DataSet,12315,'BOLO CHOCOLATE')
            self.editarDescricaoProduto(self.DataSet,10629,'GIN BERRY')
            self.editarDescricaoProduto(self.DataSet,6850,'GIN BERRY')
            self.editarDescricaoProduto(self.DataSet,8407,'GIN BERRY')
            self.editarDescricaoProduto(self.DataSet,7804,'GIN LONDON DRY ING.')
            self.editarDescricaoProduto(self.DataSet,4332,'GIN LONDON DRY ING.')
            self.editarDescricaoProduto(self.DataSet,7718,'GIN LONDON DRY ING.')
            self.editarDescricaoProduto(self.DataSet,7298,'GIN LONDON DRY ING.')
            self.editarDescricaoProduto(self.DataSet,8170,'GIN TONIC LARANJA')
            self.editarDescricaoProduto(self.DataSet,8701,'GIN LARANJA ING.')
            self.editarDescricaoProduto(self.DataSet,6811,'PAPEL HIG F.DUPLA 30M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,12826,'PAPEL HIG F.DUPLA 30M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,7330,'PAPEL HIG F.DUPLA 30M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,4409,'PAPEL HIG.ROLAO BRANCO RECICLADO')
            self.editarDescricaoProduto(self.DataSet,5143,'PAPEL HIG.ROLAO CLASSIC PAPEL VIRGEM')
            self.editarDescricaoProduto(self.DataSet,8909,'PAPEL HIG.ROLAO CLASSIC PAPEL VIRGEM')
            self.editarDescricaoProduto(self.DataSet,12841,'PAPEL HIG.ROLAO CLASSIC PAPEL VIRGEM')
            self.editarDescricaoProduto(self.DataSet,8908,'PAPEL HIG.ROLAO BRANCO RECICLADO')
            self.editarDescricaoProduto(self.DataSet,7404,'GIN LEMONADE')
            self.editarDescricaoProduto(self.DataSet,7319,'MACA, CANELA')
            self.editarDescricaoProduto(self.DataSet,2442,'MARG. 50% CR.VGT GORD.C/SAL')
            self.editarDescricaoProduto(self.DataSet,10931,'MARG. 50% CR.VGT GORD.C/SAL')
            self.editarDescricaoProduto(self.DataSet,10697,'MARG. 50% CR.VGT GORD.C/SAL')
            self.editarDescricaoProduto(self.DataSet,12244,'CALDO CEBOLA E ALHO')
            self.editarDescricaoProduto(self.DataSet,8826,'GIN LONDON DRY ING.')
            self.editarDescricaoProduto(self.DataSet,8251,'PAPEL HIG F.DUPLA 20M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,8250,'PAPEL HIG F.DUPLA 20M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,8249,'PAPEL HIG F.DUPLA 20M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,12840,'PAPEL HIG F.SIMPLES 30M NEUTRO')
            self.editarDescricaoProduto(self.DataSet,11564,'CALDO DELICIAS DO MAR')
            self.editarDescricaoProduto(self.DataSet,6425,'BOLO CHOCOLATE')
            self.editarDescricaoProduto(self.DataSet,6426,'BOLO CHOCOLATE')
            self.editarDescricaoProduto(self.DataSet,2634,'BOLO FESTA')
            self.editarDescricaoProduto(self.DataSet,2199,'BOLO FESTA')
            self.editarDescricaoProduto(self.DataSet,10633,'AZEITE EXT V 0,5%')
            self.editarDescricaoProduto(self.DataSet,3876,'AZEITE EXT V ARG.0,5%')
            self.editarDescricaoProduto(self.DataSet,3152,'AZEITE EXT V ARG.0,5%')
            self.editarDescricaoProduto(self.DataSet,12239,'AZEITE EXT V ARG.0,8%')
            self.editarDescricaoProduto(self.DataSet,5149,'AZEITE EXT V ESP.0,5%')
            self.editarDescricaoProduto(self.DataSet,11768,'AZEITE EXT V ESP.0,5%')
            self.editarDescricaoProduto(self.DataSet,5150,'AZEITE EXT V ESP.0,5%')
            self.editarDescricaoProduto(self.DataSet,5153,'AZEITE EXT V ESP.0,5%')
            self.editarDescricaoProduto(self.DataSet,11693,'AZEITE EXT V ITA.0,5%')
            self.editarDescricaoProduto(self.DataSet,11692,'AZEITE EXT V ITA.0,5%')
            self.editarDescricaoProduto(self.DataSet,3162,'AZEITE EXT V POR.0,5%')
            self.editarDescricaoProduto(self.DataSet,8837,'AZEITE EXT V POR.0,5%')
            self.editarDescricaoProduto(self.DataSet,12237,'AZEITE EXT V ARG.0,5%')
            self.editarDescricaoProduto(self.DataSet,12238,'AZEITE EXT V ARG.0,5%')
            self.editarDescricaoProduto(self.DataSet,7364,'AZEITE MISTO')
            self.editarDescricaoProduto(self.DataSet,5384,'AZEITE MISTO')
            self.editarDescricaoProduto(self.DataSet,5637,'AZEITE MISTO')
            self.editarDescricaoProduto(self.DataSet,11967,'AZEITE PURO ESP.1%')
            self.editarDescricaoProduto(self.DataSet,11968,'AZEITE PURO ESP.1%')
            self.editarDescricaoProduto(self.DataSet,10005,'AZEITE PURO POR.1%')
            self.editarDescricaoProduto(self.DataSet,1898,'AZEITE SACHE EXT V ARG')
            self.editarDescricaoProduto(self.DataSet,8830,'ESPUM MOSCATEL')
            self.editarDescricaoProduto(self.DataSet,1894,'ACUCAR GLACE')
            self.editarDescricaoProduto(self.DataSet,11086,'MAIONESE SALADA')
            self.editarDescricaoProduto(self.DataSet,11138,'MAIONESE SALADA')
            self.editarDescricaoProduto(self.DataSet,11139,'MAIONESE SALADA')
            self.editarDescricaoProduto(self.DataSet,11140,'MAIONESE SALADA')
            self.editarDescricaoProduto(self.DataSet,11677,'MAIONESE SALADA')
            self.editarDescricaoProduto(self.DataSet,489,'FARINHA MILHO')
            self.editarDescricaoProduto(self.DataSet,10157,'FARINHA MILHO')
            self.editarDescricaoProduto(self.DataSet,6541,'FARINHA MILHO TORRADA')
            self.editarDescricaoProduto(self.DataSet,6540,'FARINHA MILHO TORRADA')
            self.editarDescricaoProduto(self.DataSet,3951,'FARINHA ARROZ')
            self.editarDescricaoProduto(self.DataSet,5767,'FARINHA MILHO FLOCAO')
            self.editarDescricaoProduto(self.DataSet,4581,'FARINHA MILHO FLOCAO')
            self.editarDescricaoProduto(self.DataSet,11682,'FARINHA ARROZ FLOCAO')
            self.editarDescricaoProduto(self.DataSet,6903,'TACA TIPO 1')
            self.editarDescricaoProduto(self.DataSet,3028,'TACA TIPO 1')
            self.editarDescricaoProduto(self.DataSet,7228,'TACA TIPO 1')
            self.editarDescricaoProduto(self.DataSet,6490,'TACA TIPO 1')
            self.editarDescricaoProduto(self.DataSet,3145,'TACA TIPO 1')
            self.editarDescricaoProduto(self.DataSet,3028,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,3029,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,5832,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,2082,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,4964,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,3802,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,8960,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,4951,'TACA TIPO 2')
            self.editarDescricaoProduto(self.DataSet,4306,'TACA TIPO 3')
            self.editarDescricaoProduto(self.DataSet,1960,'TACA TIPO 3')
            self.editarDescricaoProduto(self.DataSet,4947,'TACA TIPO 3')
            self.editarDescricaoProduto(self.DataSet,4308,'TACA TIPO 3')
            self.editarDescricaoProduto(self.DataSet,3810,'TACA TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3911,'TACA TIPO 4')
            self.editarDescricaoProduto(self.DataSet,6204,'COPO TIPO 1')
            self.editarDescricaoProduto(self.DataSet,5122,'COPO TIPO 1')
            self.editarDescricaoProduto(self.DataSet,5901,'COPO TIPO 1')
            self.editarDescricaoProduto(self.DataSet,2100,'COPO TIPO 1')
            self.editarDescricaoProduto(self.DataSet,2173,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,2106,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,7045,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,2170,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,2175,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,3794,'COPO TIPO 2')
            self.editarDescricaoProduto(self.DataSet,2705,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,2707,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,7789,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,4508,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,9530,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,5827,'COPO TIPO 3')
            self.editarDescricaoProduto(self.DataSet,5812,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,4113,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,5830,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,7041,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3807,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3793,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,2171,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,7384,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3809,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3808,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,7380,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,2002,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,4509,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,7042,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,3860,'COPO TIPO 4')
            self.editarDescricaoProduto(self.DataSet,7044,'COPO CAFE')
            self.editarDescricaoProduto(self.DataSet,5192,'COPO CAFE')        
            self.editarDescricaoProduto(self.DataSet,12052,'BISC. SALGADO BARBECUE')    
            self.editarDescricaoProduto(self.DataSet,12049,'BISC. SALGADO PARMESAO')
            self.editarDescricaoProduto(self.DataSet,12051,'BISC. SALGADO PIZZA')  
            self.editarDescricaoProduto(self.DataSet,5131,'BISC. LEITE')    
            self.editarDescricaoProduto(self.DataSet,9137,'BISC. CHOCOLATE BRANCO E PRETO')    
            self.editarDescricaoProduto(self.DataSet,10671,'BISC. AGUA E SAL')    
            self.editarDescricaoProduto(self.DataSet,10632,'BISC. AGUA E SAL')    
            self.editarDescricaoProduto(self.DataSet,2212,'BISC. CHOCOLATE')    
            self.editarDescricaoProduto(self.DataSet,4966,'BISC. CHOCOLATE')    
            self.editarDescricaoProduto(self.DataSet,10671,'BISC. SALGADO AGUA E SAL')    
            self.editarDescricaoProduto(self.DataSet,10631,'BISC. SALGADO AGUA E SAL')    
            self.editarDescricaoProduto(self.DataSet,10632,'BISC. SALGADO AGUA E SAL')    
            self.editarDescricaoProduto(self.DataSet,5403,'BISC. SALGADO PRESUNTO')    
            self.editarDescricaoProduto(self.DataSet,3893,'BISC. CHOCOLATE')    
            self.editarDescricaoProduto(self.DataSet,13056,'VINHO IMP ARG MALBEC')    
            self.editarDescricaoProduto(self.DataSet,9401,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,11566,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,12900,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,9389,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,12089,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,12466,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,13057,'VINHO IMP ARG CHARDONNAY')
            self.editarDescricaoProduto(self.DataSet,12464,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,13055,'VINHO IMP ARG CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,10762,'VINHO IMP ARG CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,2944,'VINHO IMP ARG MALBEC')
            self.editarDescricaoProduto(self.DataSet,12001,'VINHO IMP ARG SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,2351,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,10788,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,6340,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,5329,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,2400,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,5338,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,4931,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,8363,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,4932,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,5340,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,11784,'VINHO IMP CHI CABERNET SAUVIGNON')	
            self.editarDescricaoProduto(self.DataSet,10792,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,2436,'VINHO IMP CHI SAUVIGNON BLANC BRANCO')
            self.editarDescricaoProduto(self.DataSet,6341,'VINHO IMP CHI SAUVIGNON BLANC BRANCO')
            self.editarDescricaoProduto(self.DataSet,12778,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,11422,'MACA')
            self.editarDescricaoProduto(self.DataSet,12901,'VINHO IMP CHI CARMENERE')
            self.editarDescricaoProduto(self.DataSet,9402,'VINHO IMP CHI CARMENERE')
            self.editarDescricaoProduto(self.DataSet,12385,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,12090,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,12386,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,9400,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,9399,'VINHO IMP CHI ROSE')
            self.editarDescricaoProduto(self.DataSet,9398,'VINHO IMP CHI SAUVIGNON BLANC')
            self.editarDescricaoProduto(self.DataSet,12465,'VINHO IMP CHI ROSE')
            self.editarDescricaoProduto(self.DataSet,12085,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,10761,'VINHO IMP CHI CABERNET SAUVIGNON')
            self.editarDescricaoProduto(self.DataSet,10760,'VINHO IMP CHI CARMENERE')
            self.editarDescricaoProduto(self.DataSet,12173,'VINHO IMP ITA ROSE')
            self.editarDescricaoProduto(self.DataSet,10760,'VINHO IMP CHI CARMENERE')
            self.editarDescricaoProduto(self.DataSet,5560,'CHOC COM MORANGO STIKADINHO')
            self.editarDescricaoProduto(self.DataSet,5605,'ACHOCOLATADO')
            
            self.adicionarPalavrasSecaoDescricao(self.DataSet,218,'CALDO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,214,'COND. ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,80,'ENERG. ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,10004,'CANETA ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,24,'APERITIVO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,99,'REFRESCO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,206,'MOLHO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,254,'ACUCAR ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,262,'CAFE ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,268,'FARINHA ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,510,'SABAO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,638,'TOUCA ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,528,'DESODORIZ. ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,520,'ESPONJA ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,510,'SABAO ',True)
            self.adicionarPalavrasSecaoDescricao(self.DataSet,40,'ESPUM',True)

        def alteracoesDescricaoProdutoV1(self,ListaModificacoes):
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 12009,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 12009, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 12009, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 4472,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 4472, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 4472, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 6211,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 6211, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 6211, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 1893,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 1893, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 1893, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8315,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8315, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8315, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8322,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8322, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8322, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8323,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8323, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8323, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8324,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8324, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8324, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8325,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8325, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8325, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 8327,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 8327, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 8327, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodigoProduto'] == 9021,'NovoValor': self.DataSet.loc[self.DataSet['CodigoProduto'] == 9021, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodigoProduto'] == 9021, 'InformacoesTecnicasV1']})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':self.DataSet['CodSecao']==46,'NovoValor':self.DataSet.loc[self.DataSet['CodSecao']==46, 'DescricaoProduto'] + ' ' +  self.DataSet.loc[self.DataSet['CodSecao']==46, 'InformacoesTecnicasV1'].fillna('')})
            ListaModificacoes.append({'CampoTroca':'DescricaoProduto','Filtro':(self.DataSet['CodSecao']==628) & (~self.DataSet['CodigoProduto'].isin([7134,7135])),'NovoValor': self.DataSet.loc[(self.DataSet['CodSecao']==628) & (~self.DataSet['CodigoProduto'].isin([7134,7135])), 'DescricaoProduto'] +  ' ' +  self.DataSet.loc[(self.DataSet['CodSecao']==628) & (~self.DataSet['CodigoProduto'].isin([7134,7135])), 'InformacoesTecnicasV1']})        
            self.atribuirValorCampoLista(ListaModificacoes)
            
        def limpezaProdutos(self):
            self.DataSet.drop(self.DataSet[self.DataSet['CodSecao'] == 10008].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodSecao'] == 64].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodSecao'] == 66].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodMarca'] == 743].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 5132].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 9244].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11902].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12075].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 1353].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8920].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8482].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12024].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 615].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8482].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11889].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7762].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12390].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8700].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8692].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8695].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8180].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8256].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7610].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 4073].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 3269].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 2708].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 6885].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7114].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8535].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11295].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7306].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7326].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 1331].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 5916].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11891].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8915].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12431].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11325].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11923].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11560].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 11926].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 6557].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7420].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8631].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7428].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12855].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 6557].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12217].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12218].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 4927].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 3200].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 1353].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 5132].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 8482].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 12417].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7934].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['CodigoProduto'] == 7953].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'\bVasilhame\b',case=False, regex=True)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'\Amostra\b',case=False, regex=True)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'BEB. \b',case=False, regex=True)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'BEB.\b',case=False, regex=True)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'\bS/C\b',case=False, regex=True) & (self.DataSet['CodDepartamento'] == 1) & (self.DataSet['CodSecao'] == 4)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'\bS/CAR\b',case=False, regex=True) & (self.DataSet['CodDepartamento'] == 1) & (self.DataSet['CodSecao'] == 4)].index, inplace = True)
            self.DataSet.drop(self.DataSet[self.DataSet['DescricaoProduto'].str.contains(fr'\bS/CART\b',case=False, regex=True) & (self.DataSet['CodDepartamento'] == 1) & (self.DataSet['CodSecao'] == 4)].index, inplace = True)
            self.DataSet['DescricaoProduto'] = self.DataSet['DescricaoProduto'].str.replace(r'\s+', ' ', regex=True)
            self.DataSet['DescricaoProduto'] = self.DataSet['DescricaoProduto'].str.lstrip()
            self.DataSet['DescricaoProduto'] = self.DataSet['DescricaoProduto'].str.rstrip()
            self.DataSet['Marca'] = self.DataSet['Marca'].apply(self.processar_marca)
            
            
        @staticmethod
        def processar_marca(marca):
            if isinstance(marca, str):  # Verifica se é uma string
                return marca.split(',')[0]
            return marca  # Retorna o valor original se não for uma string


        @staticmethod
        def mudarCodMarcaSemRegistro(Data,Palavra,CodMarca,CampoFiltro):
            Data.loc[Data[CampoFiltro].str.contains(fr'\b{Palavra}\b',case=False, regex=True) & (Data['CodMarca'] == 0), 'CodMarca'] = CodMarca

        @staticmethod
        def mudarMarcaSemRegistro(Data,Palavra,Marca,CampoFiltro):
            Data.loc[Data[CampoFiltro].str.contains(rf'\b{Palavra}\b',case=False, regex=True) & (Data['CodMarca'] == 0), 'Marca'] = Marca

        @staticmethod
        def mudarCodMarcaJaRegistrada(Data,Palavra,CodMarca,CampoFiltro):
            Data.loc[Data[CampoFiltro].str.contains(rf'\b{Palavra}\b',case=False, regex=True), 'CodMarca'] = CodMarca

        @staticmethod
        def mudarMarcaJaRegistrada(Data,Palavra,Marca,CampoFiltro):
            Data.loc[Data[CampoFiltro].str.contains(rf'\b{Palavra}\b',case=False, regex=True), 'Marca'] = Marca

        @staticmethod
        def removerLinhaPorCodProduto(Data,CodigoProduto):
            Data.drop(Data[Data['CodigoProduto'] == CodigoProduto].index, inplace = True)

        @staticmethod
        def removerTipoEmbalagemDescricao(Descricao,TipoEmbalagem):
            Descricao = Descricao.replace(TipoEmbalagem.strip(), '').strip()
            return Descricao

        @staticmethod
        def removerPalavrasSecaoDescricao(Data,CodigoSecao,TextoRemover):
            if CodigoSecao in Data['CodSecao'].values:
                texto_remover_escapado = re.escape(TextoRemover)
                Data.loc[Data['CodSecao'] == CodigoSecao, 'DescricaoProduto'] = Data.loc[Data['CodSecao'] == CodigoSecao, 'DescricaoProduto'].str.replace(fr'\b{texto_remover_escapado}\b', '', case=False,regex=True)
            else:
                print(f"Seção com código {CodigoSecao} não encontrada.")

        @staticmethod
        def adicionarPalavrasSecaoDescricao(Data,CodigoSecao,TextoAdicionar,Inicio):
            if CodigoSecao in Data['CodSecao'].values:
                if Inicio:
                    mask = (Data['CodSecao'] == CodigoSecao)
                    Data.loc[mask, 'DescricaoProduto'] = Data.loc[mask, 'DescricaoProduto'].apply(
                        lambda x: x if TextoAdicionar.strip().lower() in x.lower() else TextoAdicionar + x
                    )
                    
                else:
                    mask = (Data['CodSecao'] == CodigoSecao)
                    Data.loc[mask, 'DescricaoProduto'] = Data.loc[mask, 'DescricaoProduto'].apply(
                        lambda x: x if TextoAdicionar.strip().lower() in x.lower() else x  +  TextoAdicionar
                    )
            else:
                print(f"Seção com código {CodigoSecao} não encontrada.")

        @staticmethod
        def substituirPalavrasSecaoDescricao(Data,CodigoSecao,TextoSubstituir,NovoTexto):
            if CodigoSecao in Data['CodSecao'].values:
                Data.loc[Data['CodSecao'] == CodigoSecao, 'DescricaoProduto'] = (
                    Data.loc[Data['CodSecao'] == CodigoSecao, 'DescricaoProduto'].str.replace(TextoSubstituir, NovoTexto, regex=False)
                )
            else:
                print(f"Seção com código {CodigoSecao} não encontrada.")
                
        @staticmethod   
        def editarDescricaoProduto(Data,CodigoProduto,NovoTexto):
            if CodigoProduto in Data['CodigoProduto'].values:
                Data.loc[Data['CodigoProduto'] == CodigoProduto, 'DescricaoProduto'] = NovoTexto
            else:
                print(f"Produto com código {CodigoProduto} não encontrada.")
                
        @staticmethod
        def removerMarcasDescricao(Descricao,Marcas):
            if Marcas is np.nan:
                return ''
            Marcas = Marcas.split(',')
            for marca in Marcas:
                Descricao = Descricao.replace(marca.strip(), '').strip()
            return Descricao
        
        def atribuirValorCampoLista(self,Lista):
            for item in Lista:
                for key, value in item.items():
                    match key:
                        case 'CampoTroca':
                            campoTroca = value
                        case 'Filtro':
                            campoFiltro = value
                        case 'NovoValor':
                            campoNovoValor = value
                self.DataSet.loc[campoFiltro, campoTroca] = campoNovoValor
